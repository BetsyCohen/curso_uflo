edades <- c(25, 30, 22, 40, 35)
edades
edades+1
edades <- c(25, 30, 22, 40, 35)
edades
edades+1
edad*2
edades*2
edades-5
# Creamos un vector con ingresos de hogar
ingresos_hogares <- c(1500000, 2200000, 800000, 600000, 1200000)
ingresos_hogares
min(ingresos_hogares)
max(ingresos_hogares,)
max(ingresos_hogares)
rm(ingresos_hogares)
min(edades)
mayores_de_16 <- edades > 16
mayores_de_16
edades <- c(25, 14, 22, 40, 35)
mayores_de_16 <- edades > 16
mayores_de_16
niveles_educativos <- c("Secundario", "Universitario", "Primario", "Universitario", "Terciario")
niveles_educativos
niveles_educativos_factor <- niveles_educativos
niveles_educativos_factor
rm(genero_vector)
niveles_educativos_factor
niveles_educativos_factor <- c("Primario","Secundario","Terciario","Universitario")
niveles_educativos_factor
rm(niveles_educativos)
sexo <- c("Masculino", "Femenino")
sexo
niveles_educativos_factor <- c("Primario","Secundario","Terciario","Universitario")
niveles_educativos_factor
levels(niveles_educativos_factor)
niveles_educativos_factor <- c("Primario","Secundario","Terciario","Universitario")
niveles_educativos_factor
levels(niveles_educativos_factor)
niveles_educativos_caracter <- c("Primario","Secundario","Terciario","Universitario")
niveles_educativos_factor <- factor(niveles_educativos_caracter)
niveles_educativos_factor
rm(sexo)
provincia <- c("CABA", "Buenos Aires","Buenos Aires","Buenos Aires","Mendoza")
provincia
levels(niveles_educativos_factor)
nombres <- c("Ana", "Pedro", "Maria", "Juan", "Sofia")
edades <- c(25, 30, 22, 40, 35)
nivel_edu <- factor(c("Universitario", "Secundario", "Universitario", "Terciario", "Secundario"))
sociodata <- data.frame(nombre = nombres, edad = edades, educacion = nivel_edu)
sociodata
encuesta_excel <- read_excel("datasets/encuesta_sociologica.xlsx")
library(readxl)
encuesta_excel <- read_excel("datasets/encuesta_sociologica.xlsx")
library(readxl) # Si no cargaste tidyverse completo
library(here)
ruta_archivo_local <- here("dataset", "Encuestas ATTTA.xlsx")
ruta_archivo_local <- here("materiales/datasets", "Encuestas ATTTA.xlsx")
ruta_archivo_local # Para ver la ruta que construye here()
encuestas_attta_local <- read_excel(ruta_archivo_local)
encuestas_attta_local
url_excel_attta <- "https://raw.githubusercontent.com/gastonbecerra/attta_encuestas/main/dataentry/Encuestas%20ATTTA.xlsx"
encuestas_attta_online <- read_excel(url_excel_attta)
url_excel_attta <- "https://github.com/gastonbecerra/attta_encuestas/raw/refs/heads/main/dataentry/Encuestas%20ATTTA.xlsx"
encuestas_attta_online <- read_excel(url_excel_attta)
url_excel_attta <- "https://github.com/gastonbecerra/attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx"
encuestas_attta_online <- read_excel(url_excel_attta)
url_excel_attta <- "https://github.com/gastonbecerra/attta_encuestas/raw/refs/heads/main/dataentry/Encuestas%20ATTTA.xlsx"
encuestas_attta_online <- read_excel(url_excel_attta)
url_excel_attta <- "https://raw.githubusercontent.com/gastonbecerra/attta_encuestas/main/dataentry/Encuestas%20ATTTA.xlsx"
encuestas_attta_online <- read_excel(url_excel_attta)
url_excel_attta <- "https://github.com/gastonbecerra/attta_encuestas/raw/refs/heads/main/dataentry/Encuestas%20ATTTA.xlsx"
encuestas_attta_online <- read_excel(url_excel_attta)
url_excel_attta <-
"https://github.com/gastonbecerra/attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx"
encuestas_attta_online <- read_excel(url_excel_attta)
url_excel_attta <-
"https://github.com/gastonbecerra/attta_encuestas/raw/refs/heads/main/dataentry/Encuestas%20ATTTA.xlsx"
encuestas_attta_online <- read_excel(url_excel_attta)
encuestas_attta_online <- read_excel("https://github.com/gastonbecerra/attta_encuestas/raw/refs/heads/main/dataentry/Encuestas%20ATTTA.xlsx")
encuestas_attta_online <- read_excel(path = "https://github.com/gastonbecerra/attta_encuestas/raw/refs/heads/main/dataentry/Encuestas%20ATTTA.xlsx")
read.csv("https://github.com/BetsyCohen/analisis-de-graduades/blob/main/graduados_fsoc.csv")
read.csv("https://github.com/BetsyCohen/analisis-de-graduades/blob/main/graduados_fsoc.csv")
read.csv("https://datos.gob.ar/dataset/ssn-vehiculos-expuestos-riesgos/archivo/ssn_54ac6186-bc01-421a-a583-2e106537f49f.csv")
read.csv("https://datosabiertos.ssn.gob.ar/dataset/569cdfbe-8d7b-4041-bb1c-bbf21e99640c/resource/54ac6186-bc01-421a-a583-2e106537f49f/download/vehiculos-expuestos.csv")
read.csv("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
read_excel("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
read_xlsx("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
readxl::read_xls("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
read.csv2("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
read_xlsx("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
read_xlsx("dataentry/Encuestas ATTTA.xlsx")
read_xlsx("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
read_excel("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
read.xlsx("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
install.packages('openxlsx')
read_xlsx("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
read.xlsx("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
openxlsx::read.xlsx("https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
openxlsx::read.xlsx(
xlsxFile ="https://github.com/BetsyCohen/UFLO-datasets-attta_encuestas/blob/main/dataentry/Encuestas%20ATTTA.xlsx")
ruta_archivo_local <- here("materiales/datasets", "base-datos-encc-2022-2023")
ruta_archivo_local # Para ver la ruta que construye here()
encuestas_attta_local <- read.csv(ruta_archivo_local)
ruta_archivo_local <- here("materiales/datasets", "base-datos-encc-2022-2023")
ruta_archivo_local # Para ver la ruta que construye here()
encuesta <- read.csv(ruta_archivo_local)
ruta_archivo_local # Para ver la ruta que construye here()
ruta_archivo_local <- here("materiales/datasets", "base-datos-encc-2022-2023.csv")
ruta_archivo_local # Para ver la ruta que construye here()
encuesta <- read.csv(ruta_archivo_local)
encuesta
url_encuesta <- "https://datos.cultura.gob.ar/dataset/251c2ac2-e670-451c-9dbf-a4212af225b5/resource/b635d1fc-2161-4901-a21d-7f93d56d99a4/download/base-datos-encc-2022-2023.csv"
encuesta_version_directo_online <- read.csv(url_encuesta)
encuesta_version_directo_online
encuesta_version_directo_online <- read.csv(url_encuesta)
glimpse(starwars)
library(tidyverse) # llamamos así la librería donde vive esta función
glimpse(starwars)
str(starwars)
glimpse(titanic)
glimpse(Titanic)
str(Titanic)
head(Titanic)
tail(Titanic)
head(as.dataframe(Titanic))
head(as.data.frame(Titanic))
head(iris)
tail(iris)
glimpse(iris)
str(iris)
summary(iris)
summary(iris$Sepal.Length)
#glimpse(iris)
#| context: setup
#| include: false
# load libraries
library(tidyverse)
# load data
# url
encc_serie_hist_url <- "https://datos.cultura.gob.ar/dataset/251c2ac2-e670-451c-9dbf-a4212af225b5/resource/d9570d16-f5d1-4d18-8145-3372eafb97af/download/encc-serie-historica.csv"
# lo asignamos a un objeto tabla con la función read.csv
encc_serie_hist <- read.csv(encc_serie_hist_url)
#| context: setup
#| include: false
# load libraries
library(tidyverse)
# load data
# url
url <- "https://datos.cultura.gob.ar/dataset/251c2ac2-e670-451c-9dbf-a4212af225b5/resource/b635d1fc-2161-4901-a21d-7f93d56d99a4/download/base-datos-encc-2022-2023.csv.csv"
# lo asignamos a un objeto tabla con la función read.csv
encc_2022 <- read.csv(encc_serie_hist_url)
#| context: setup
#| include: false
# load libraries
library(tidyverse)
# load data
# url
url <- "https://datos.cultura.gob.ar/dataset/251c2ac2-e670-451c-9dbf-a4212af225b5/resource/b635d1fc-2161-4901-a21d-7f93d56d99a4/download/base-datos-encc-2022-2023.csv.csv"
# lo asignamos a un objeto tabla con la función read.csv
encc_2022 <- read.csv(url)
names(encc_2022)
str(encc_2022)
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(genero) %>%
summarise(personas = n_distinct(id))
ejemplo_pivot_1
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(genero) %>%
summarise(personas = n_distinct(id),
edad_promedio = mean(edad))
ejemplo_pivot_1
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(genero) %>%
summarise(personas = n_distinct(id),
edad_promedio = mean(edad)) %>%
pivot_wider(names_from =  (genero) )
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(genero) %>%
summarise(edad_promedio = mean(edad)) %>%
pivot_wider(names_from =  (genero),
values_from = (edad_promedio))
ejemplo_pivot_1
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(reion,genero) %>%
summarise(edad_promedio = mean(edad)) %>%
pivot_wider(names_from =  c(region,genero),
values_from = round(edad_promedio))
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(region,genero) %>%
summarise(edad_promedio = mean(edad)) %>%
pivot_wider(names_from =  c(region,genero),
values_from = round(edad_promedio))
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = mean(edad)) %>%
pivot_wider(names_from =  c(region,genero))
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id)) %>%
pivot_wider(names_from =  c(region,genero),
values_from = round(personas))
encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id))
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id)) %>%
pivot_wider(names_from =  c(genero),
values_from = round(personas))
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id)) %>%
pivot_wider(names_from =  genero,
values_from = personas)
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id),.groups) %>%
pivot_wider(names_from =  genero,
values_from = personas)
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id),.groups = drop) %>%
pivot_wider(names_from =  genero,
values_from = personas)
# example categories in columns for pivot longer
ejemplo_pivot_1 <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id),.groups = "drop") %>%
pivot_wider(names_from =  genero,
values_from = personas)
View(ejemplo_pivot_1)
View(ejemplo_pivot_1)
View(ejemplo_pivot_1)
View(ejemplo_pivot_1)
# example categories in columns for pivot longer
encc_personas_por_genero_region <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id),.groups = "drop") %>%
pivot_wider(names_from =  genero,
values_from = personas)
View(encc_personas_por_genero_region)
View(encc_personas_por_genero_region)
encc_personas_por_genero_region
encc_personas_por_genero_region %>%
pivot_longer(names_to = "sexo")   # cómo se va a llamar la variable
encc_personas_por_genero_region %>%
pivot_longer(
cols = c("Mujer","Varón","No binario"),
names_to = "sexo")   # cómo se va a llamar la variable
encc_personas_por_genero_region %>%
pivot_longer(
cols = c("Mujer","Varón","No binario"),
names_to = "sexo",
values_to = "personas"
)   # cómo se va a llamar la variable
encc_personas_por_genero_region %>%
pivot_longer(
cols = c("Mujer","Varón","No binario"), # qué columnas necesitas pivotear
names_to = "sexo", # cómo se va a llamar la variable a donde van a parar
values_to = "personas" # (opcional) nombre de la columna a donde van a parar los valores pivoteados
) %>%
head(n=8)
encc_personas_por_genero_region_alargada <- encc_personas_por_genero_region %>%
pivot_longer(
cols = c("Mujer","Varón","No binario"), # qué columnas necesitas pivotear
names_to = "sexo", # cómo se va a llamar la variable a donde van a parar
values_to = "personas" # (opcional) nombre de la columna a donde van a parar los valores pivoteados
)
encc_personas_por_genero_region_alargada %>%
head(n=8)
encc_personas_por_genero_region_alargada %>%
filter(sexo == "Mujeres")
encc_personas_por_genero_region_alargada %>%
filter(sexo == "Mujer")
encc_personas_por_genero_region_alargada %>%
pivot_wider(names_from = "sexo",
values_from = "persona")
encc_personas_por_genero_region_alargada %>%
pivot_wider(names_from = "sexo",
values_from = "personas")
#| context: setup
#| include: false
# load libraries
library(tidyverse)
# load data
# url
url <- "https://datos.cultura.gob.ar/dataset/251c2ac2-e670-451c-9dbf-a4212af225b5/resource/b635d1fc-2161-4901-a21d-7f93d56d99a4/download/base-datos-encc-2022-2023.csv.csv"
# lo asignamos a un objeto tabla con la función read.csv
encc_2022 <- read.csv(url)
# Ejemplo tabla personas por género y región
encc_personas_por_genero_region <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id),.groups = "drop") %>%
pivot_wider(names_from =  genero,
values_from = personas)
# Ejemplo tabla personas por region (para joins - simplificada)
encc_personas_region <- encc_2022 %>%
group_by(region) %>%
summarise(total_personas = n_distinct(id), .groups = "drop")
# Ejemplo tabla tamanio localidad por region (para joins - inventada para ejemplo)
tamanio_localidad_region <- encc_2022 %>%
group_by(region, tamanio) %>%
summarise(conteo_tamanio = n(), .groups = "drop") %>%
pivot_wider(names_from = tamanio, values_from = conteo_tamanio, values_fill = 0) # Rellenar con 0 los NA para ejemplo JOIN
#| context: setup
#| include: false
# load libraries
library(tidyverse)
# load data
# url
url <- "https://datos.cultura.gob.ar/dataset/251c2ac2-e670-451c-9dbf-a4212af225b5/resource/b635d1fc-2161-4901-a21d-7f93d56d99a4/download/base-datos-encc-2022-2023.csv.csv"
# lo asignamos a un objeto tabla con la función read.csv
encc_2022 <- read.csv(url)
# Ejemplo tabla personas por género y región
encc_personas_por_genero_region <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id),.groups = "drop") %>%
pivot_wider(names_from =  genero,
values_from = personas)
# Ejemplo tabla personas por region (para joins - simplificada)
encc_personas_region <- encc_2022 %>%
group_by(region) %>%
summarise(total_personas = n_distinct(id), .groups = "drop")
# Ejemplo tabla tamanio localidad por region (para joins - inventada para ejemplo)
tamanio_localidad_region <- encc_2022 %>%
group_by(region, tamanio) %>%
summarise(conteo_tamanio = n(), .groups = "drop") %>%
pivot_wider(names_from = tamanio, values_from = conteo_tamanio, values_fill = 0) # Rellenar con 0 los NA para ejemplo JOIN
View(encc_personas_por_genero_region)
View(encc_personas_por_genero_region)
View(encc_personas_region)
View(encc_personas_region)
View(tamanio_localidad_region)
View(tamanio_localidad_region)
#| context: setup
#| include: false
# load libraries
library(tidyverse)
# load data
# url
url <- "https://datos.cultura.gob.ar/dataset/251c2ac2-e670-451c-9dbf-a4212af225b5/resource/b635d1fc-2161-4901-a21d-7f93d56d99a4/download/base-datos-encc-2022-2023.csv.csv"
# lo asignamos a un objeto tabla con la función read.csv
encc_2022 <- read.csv(url)
# Ejemplo tabla personas por género y región
encc_personas_por_genero_region <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id),.groups = "drop") %>%
pivot_wider(names_from =  genero,
values_from = personas)
# Ejemplo tabla personas por region (para joins - simplificada)
encc_personas_region <- encc_2022 %>%
group_by(region) %>%
summarise(total_personas = n_distinct(id), .groups = "drop")
# Ejemplo tabla tamanio localidad por region (para joins - inventada para ejemplo)
tamanio_localidad_region <- encc_2022 %>%
group_by(region, tamanio) %>%
summarise(conteo_tamanio = n(), .groups = "drop") %>%
pivot_wider(names_from = tamanio, values_from = conteo_tamanio, values_fill = 0) # Rellenar con 0 los NA para ejemplo JOIN
tabla_left_join <- encc_personas_region %>%
left_join(tamanio_localidad_region, by = "region")
tabla_left_join
head(encc_personas_region)
head(tamanio_localidad_region)
head(encc_personas_region,3)
head(tamanio_localidad_region,3)
head(encc_personas_region,3)
head(tamanio_localidad_region,3)
# creamos el vector con la url
encc_serie_hist_url <- "https://datos.cultura.gob.ar/dataset/251c2ac2-e670-451c-9dbf-a4212af225b5/resource/d9570d16-f5d1-4d18-8145-3372eafb97af/download/encc-serie-historica.csv"
# lo asignamos a un objeto tabla con la función read.csv
encc_serie_hist <- read.csv(encc_serie_hist_url)
# vemos los primeros 3 casos
head(encc_serie_hist,3)
encc_serie_hist %>%
mutate(
across(
.cols = c("REGION", "PROVINCIA", "GENERO"), # Columnas de texto a modificar
.fns = tolower,            # Función: convertir a minuscula (tolower)
.names = "{.col}_MINUS"    # Nombres de nuevas columnas: "columna_MAYUS"
)
) %>%
select(region, region_MAYUS, provincia, provincia_MAYUS, genero, genero_MAYUS)  %>%
head()
encc_serie_hist %>%
mutate(
across(
.cols = c("REGION", "PROVINCIA", "GENERO"), # Columnas de texto a modificar
.fns = tolower,            # Función: convertir a minuscula (tolower)
.names = "{.col}_MINUS"    # Nombres de nuevas columnas: "columna_MAYUS"
)
) %>%
select(REGION, REGION_MINUS, PROVINCIA, PROVINCIA_MINUS, GENERO, GENERO_MINUS)  %>%
head()
encc_personas_por_genero_region
#| context: setup
#| include: false
# load libraries
library(tidyverse)
# load data
# url
url <- "https://datos.cultura.gob.ar/dataset/251c2ac2-e670-451c-9dbf-a4212af225b5/resource/b635d1fc-2161-4901-a21d-7f93d56d99a4/download/base-datos-encc-2022-2023.csv.csv"
# lo asignamos a un objeto tabla con la función read.csv
encc_2022 <- read.csv(url)
# Ejemplo tabla personas por género y región
encc_personas_por_genero_region <- encc_2022 %>%
group_by(region,genero) %>%
summarise(personas = n_distinct(id),.groups = "drop") %>%
pivot_wider(names_from =  genero,
values_from = personas)
# Ejemplo tabla personas por region (para joins - simplificada)
encc_personas_region <- encc_2022 %>%
group_by(region) %>%
summarise(total_personas = n_distinct(id), .groups = "drop")
# Ejemplo tabla tamanio localidad por region (para joins - inventada para ejemplo)
tamanio_localidad_region <- encc_2022 %>%
group_by(region, tamanio) %>%
summarise(conteo_tamanio = n(), .groups = "drop") %>%
pivot_wider(names_from = tamanio, values_from = conteo_tamanio, values_fill = 0) # Rellenar con 0 los NA para ejemplo JOIN
encc_personas_por_genero_region
head(encc_personas_por_genero_region_alargada)
encc_personas_por_genero_region_alargada <- encc_personas_por_genero_region %>%
pivot_longer(
# 1. qué columnas pivotear
cols = c("Mujer","Varón","No binario"),
# 2. cómo se va a llamar la variable
names_to = "sexo",
# (opcional) donde van a parar los valores alargados
values_to = "personas"
)
head(encc_personas_por_genero_region_alargada)
1 + 1
2 * 5
10 / 2
3 ^ 2  # Elevar al cuadrado
sqrt(16) # Raíz cuadrada
# También podes probar operaciones un poco más complejas:
(20 + 10) * 3
log10(1000) # Logaritmo base 10
# Asignando valores a variables (¡Ingredientes a la alacena!):
nombre_curso <- "Análisis de Datos 1"
anio <- 2025
# Imprimiendo variables en la consola (Mostrando en la mesada):
nombre_curso # Escribí 'nombre_curso' y presiona 'Ctrl + Enter' o 'Cmd + Enter' para ejecutar esta línea
print(nombre_curso) # Otra forma de imprimir
# Creando un pequeño resumen de texto (Preparando un plato sencillo):
cat("Bienvenido al curso de", nombre_curso, "en el año", anio, "\n") # 'cat()' permite concatenar y mostrar texto
plot(1:10) # Crea un gráfico de puntos con valores del 1 al 10 en el eje x e y por defecto
# Podes probar otros tipos de gráficos, por ejemplo:
hist(rnorm(100)) # Crea un histograma de 100 valores aleatorios de una distribución normal
ingresos_hogares <- c(25, 32, 18, 45, 28, 35, 22)
ingresos_hogares  # Imprime el vector en la consola para verificar
# 2. Calcula el ingreso promedio de los hogares usando la función 'mean()'
ingreso_promedio <- mean(ingresos_hogares)
ingreso_promedio # Imprime el ingreso promedio
# 3. Aumenta todos los ingresos en un 10% debido a un ajuste por inflación.
#    Usa un operador aritmético para multiplicar cada elemento del vector por 1.10
ingresos_ajustados <- ingresos_hogares * 1.10
ingresos_ajustados # Imprime los ingresos ajustados
# 4. Calcula la suma total de los ingresos ajustados usando la función 'sum()'
suma_ingresos_ajustados <- sum(ingresos_ajustados)
suma_ingresos_ajustados # Imprime la suma total
edades_encuestados <- c(35, 28, 42, 22, 50, 31, 25)
edades_encuestados # Imprime el vector de edades
# 6. Identifica qué edades son menores de 30 años.
#    Usa el operador relacional '<' (menor que) para comparar el vector 'edades_encuestados' con el número 30.
menores_de_30 <- edades_encuestados < 30
menores_de_30 # Imprime el vector lógico resultante
# 7. ¿Cuántos encuestados son menores de 30 años?
#    Usa la función 'sum()' en el vector lógico 'menores_de_30'.
#    (TRUE se trata como 1 y FALSE como 0 en las operaciones numéricas)
cantidad_menores_30 <- sum(menores_de_30)
cantidad_menores_30 # Imprime la cantidad
# 8. Identifica qué edades son mayores o iguales a 40 años.
#    Usa el operador relacional '>=' (mayor o igual que).
mayores_o_igual_40 <- edades_encuestados >= 40
mayores_o_igual_40 # Imprime el vector lógico
datos_sociodemograficos <- data.frame(
nombre = c("Sofia", "Mateo", "Valentina", "Diego", "Isabella", "Lucas", "Martina"),
edad = edades_encuestados,
ingreso = ingresos_hogares,
nivel_educativo = factor(c("Universitario", "Secundario", "Primario", "Universitario", "Terciario", "Secundario", "Universitario"))
)
datos_sociodemograficos # Imprime el data frame completo
# 10. Selecciona y muestra solo la columna 'nombre' del data frame usando '$'
nombres_solo <- datos_sociodemograficos$nombre
nombres_solo # Imprime solo la columna 'nombre'
# 11. Selecciona y muestra las columnas 'nombre' y 'edad' del data frame usando corchetes '[]'
nombre_edad <- datos_sociodemograficos[ , c("nombre", "edad")] # O también: datos_sociodemograficos[ , 1:2]
nombre_edad # Imprime las columnas 'nombre' y 'edad'
# 12. Selecciona y muestra solo la primera fila del data frame usando corchetes '[]'
primera_fila <- datos_sociodemograficos[1, ]
primera_fila # Imprime la primera fila
# 13. Selecciona y muestra el valor de la edad de 'Valentina' (tercera fila, columna 'edad')
edad_valentina <- datos_sociodemograficos[3, "edad"] # O también: datos_sociodemograficos$edad[3]
edad_valentina # Imprime la edad de Valentina
# install.packages("here") # Instalar 'here' (si no lo tienes instalado)
library(here)
library(dplyr) # Para glimpse()
dir.create(here("data"), showWarnings = FALSE) # Crea la carpeta 'data' si no existe
