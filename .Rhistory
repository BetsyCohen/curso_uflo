grafico1 <- df_vuelos_asientos_pasajeros %>%
group_by(anio, mes) %>%
summarise(pasajeros = sum(pasajeros, na.rm = TRUE)) %>%
ggplot(aes(x = mes, y = pasajeros, fill = as.factor(anio))) +
geom_col(position = "dodge") +
labs(title = "Pasajeros por mes y año", x = "Mes", y = "Pasajeros", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
grafico2 <- df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE)) %>%
ggplot(aes(x = as.factor(anio), y = vuelos, fill = as.factor(anio))) +
geom_col(position = "dodge") +
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
grafico3 <- df_vuelos_asientos_pasajeros %>%
ggplot(aes(x = asientos, y = pasajeros, color = as.factor(anio))) +
geom_point(alpha = 0.5, show.legend = FALSE) +
labs(title = "Relación entre asientos y pasajeros", x = "Asientos", y = "Pasajeros", color = "Año") +
theme_minimal()
#| warning: false
# importar los datos
url_datos <- "https://datos.yvera.gob.ar/dataset/c9dc110e-2a09-4b51-ac0a-a2db2ca76fbb/resource/67727a58-7a43-450d-a685-a9fba9218b20/download/puna_indicadores_provincias.csv"
# asignar al dataframe df
df <- read.csv(url_datos, encoding = "latin1")
# Definir vectores de las regiones y sus provincias
NOA <- c("Catamarca", "Jujuy", "La Rioja", "Salta", "Santiago del Estero", "Tucumán")
NEA <- c("Chaco", "Corrientes", "Formosa", "Misiones")
Centro_Cuyo <- c("Córdoba", "La Pampa", "Mendoza", "San Juan", "San Luis", "Santa Fe", "Entre Ríos")
Buenos_Aires <- c("Buenos Aires", "Ciudad Autónoma de Buenos Aires")
Sur <- c("Chubut", "Neuquén", "Río Negro", "Santa Cruz", "Tierra del Fuego")
# creamos algunas variables para poder jugar en los gráficos
df <- df %>%
# sacar años locos
filter(indice_tiempo < 2024) %>%
#
mutate(
# establecimiento como numerica
establecimientos = as.integer(establecimientos),
# region para cada provincia
region = case_when(
provincia_nombre %in% NOA ~ "NOA",
provincia_nombre %in% NEA ~ "NEA",
provincia_nombre %in% Centro_Cuyo ~ "Centro Cuyo",
provincia_nombre %in% Buenos_Aires ~ "Buenos Aires",
provincia_nombre %in% Sur ~ "Sur",
TRUE ~ "Otra"
),
# una variable al azar de asignacion de subsidio
recibio_subsidio = sample(c("Si", "No"), size = n(), replace = TRUE)
)
df %>%
mutate(across(where(is.character), as.factor)) %>%
summary()
#| output: false
ggplot(data = df)
ggplot(data = df, aes(x= region , y = establecimientos))
#| output: false
df %>%
# hago las trasformaciones que necesito
filter(indice_tiempo == 2020) %>%
#no necesito definir el parámetro data porque los datos ya estan dentro de la cadena
ggplot(aes(x= region , y = establecimientos))
#| warning: false
#| output-location: column
#| code-line-numbers: "4"
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region, y= establecimientos)) +
geom_col()
#| output: false
starwars %>%
ggplot(aes(x = gender)) +
# cuenta cuántos varones y mujeres hay y ya.
geom_bar()
#| output: false
starwars %>%
group_by(gender) %>%
summarise(average_height = round(mean(height,na.rm = T))) %>%
# tengo dos variables claras
ggplot(aes(x = gender, y= average_height )) +
# detecta la columna average_height como la que tiene el cálculo
geom_col()
#| include: false
#| warning: false
#| output: false
starwars %>%
group_by(gender) %>%
summarise(average_height = round(mean(height,na.rm = T))) %>%
ggplot(aes(x = gender, y= average_height )) +
# lo fuerzo a detectar el valor numerico y que lo tome "como está"
geom_bar(stat = "identity")
#| warning: false
#| code-line-numbers: "4"
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
geom_col(position = "dodge")
#| warning: false
#| code-line-numbers: "4"
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
geom_col(position = "stack")
#| warning: false
#| output-location: column
#| code-line-numbers: "5,6,7"
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
geom_col(position = "stack")+
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)
#| warning: false
#| output-location: column
#| code-line-numbers: "8,9"
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region , y = establecimientos, fill = plazas)) +
geom_col()+
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5) +
# Capa escala: rellena con gradientes continuos.
scale_fill_continuous(type = "gradient")
#| warning: false
#| output-location: column
#| code-line-numbers: "7"
df %>%
ggplot(aes(x= region , y = establecimientos, fill = recibio_subsidio)) +
geom_col(position = "stack")+
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5) +
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))
#| warning: false
#| output-location: column
#| code-line-numbers: "8"
df %>%
ggplot(aes(x= region , y = establecimientos, fill = recibio_subsidio)) +
geom_col(position = "stack")+
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5) +
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
facet_wrap(~ indice_tiempo)
#| warning: false
#| output-location: column
#| code-line-numbers: "9"
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
geom_col(position = "stack")+
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
coord_flip()
#| warning: false
#| output-location: column
#| code-line-numbers: "10,11"
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
geom_col(position = "stack")+
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
coord_flip() +
## elijo el theme light
theme_minimal()
#| warning: false
#| echo: false
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
geom_col(position = "stack")+
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
coord_flip()
#| warning: false
#| echo: false
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
geom_col(position = "stack")+
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
coord_flip() +
## elijo el theme light
theme_minimal()
#| warning: false
#| output-location: column
#| code-line-numbers: "12-15"
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
geom_col(position = "stack")+
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
coord_flip() +
theme_minimal()+
# agrego más capas al theme
theme(
# cambio el angulo del texto en eje x
axis.text.x = element_text(angle = 45, hjust = 1),
)
#| warning: false
#| output-location: column
#| code-line-numbers: "10,11"
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
geom_col(position = "stack")+
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
coord_flip() +
## pongo mi tema
theme_uflo()
#| warning: false
#| output-location: column
#| code-line-numbers: "11-15"
df %>%
filter(indice_tiempo == 2020) %>%
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
geom_col(position = "stack")+
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
coord_flip() +
theme_uflo()+
labs(x= "", y= "Cantidad de establecimientos",
title = "Percepcion de subsidios al turismo por region",
subtitle = "Año 2020",
caption = "Fuente: Sistema de Información Turistica de la Argentina",
fill = "¿Recibio subsidio?")
#| output: false
#| code-line-numbers: "3,4,5,7,8,21,22,23,24,25,26,27"
df %>%
filter(indice_tiempo == 2020) %>%
# hago el calculo explicito el calculo de la agrupación y cálculo para "ahorrar explicaciones a cada geom"
group_by(region, recibio_subsidio) %>%
summarise(establecimientos = sum(establecimientos, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = region, y = establecimientos, fill = recibio_subsidio)) +
# dibujo la columna
geom_col(position = "stack") +
scale_y_continuous(limits = c(0, 10000), n.breaks = 5) +
scale_fill_manual(values = c("#cf4c4c", "#7cccaf")) +
coord_flip() +
theme_uflo() +
labs(
x = "",
y = "Cantidad de establecimientos",
title = "Percepción de subsidios al turismo por región",
subtitle = "Año 2020",
caption = "Fuente: Sistema de Información Turística de la Argentina",
fill = "¿Recibió subsidio?"
)+
# dibujo los textos
geom_text(
aes(label = establecimientos),
position = position_stack(vjust = 0.5),
color = "white",
size = 3
)
#| echo: false
df %>%
filter(indice_tiempo == 2020) %>%
# hago el calculo explicito el calculo de la agrupación y cálculo para "ahorrar explicaciones a cada geom"
group_by(region, recibio_subsidio) %>%
summarise(establecimientos = sum(establecimientos, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = region, y = establecimientos, fill = recibio_subsidio)) +
# dibujo la columna
geom_col(position = "stack") +
scale_y_continuous(limits = c(0, 10000), n.breaks = 5) +
scale_fill_manual(values = c("#cf4c4c", "#7cccaf")) +
coord_flip() +
theme_uflo() +
labs(
x = "",
y = "Cantidad de establecimientos",
title = "Percepción de subsidios al turismo por región",
subtitle = "Año 2020",
caption = "Fuente: Sistema de Información Turística de la Argentina",
fill = "¿Recibió subsidio?"
)+
# dibujo los textos
geom_text(
aes(label = establecimientos),
position = position_stack(vjust = 0.5),
color = "white",
size = 3
)
#| warning: false
#| output-location: column
df %>%
# Transformo mis datos
filter(indice_tiempo == 2020) %>%
# Capa de mapeo
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
# Capa de geometria
geom_col(position = "stack")
#| warning: false
#| output-location: column
df %>%
# Transformo mis datos
filter(indice_tiempo == 2020) %>%
# Capa de mapeo
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
# Capa de geometria
geom_col(position = "stack")+
# Capas de escalas
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))
#| warning: false
#| output-location: column
df %>%
# Transformo mis datos
filter(indice_tiempo == 2020) %>%
# Capa de mapeo
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
# Capa de geometria
geom_col(position = "stack")+
# Capas de escalas
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
# Capas de coordenadas
coord_flip()
#| warning: false
#| output-location: column
df %>%
# Transformo mis datos
filter(indice_tiempo == 2020) %>%
# Capa de mapeo
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
# Capa de geometria
geom_col(position = "stack")+
# Capas de escalas
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
# Capas de coordenadas
coord_flip() +
# Capas de tema
theme_uflo()+
labs(x= "", y= "Cantidad de establecimientos",
title = "Percepcion de subsidios al turismo por region",
subtitle = "Año 2020",
caption = "Fuente: Sistema de Información Turistica de la Argentina",
fill = "¿Recibio subsidio?")
#| warning: false
#| output-location: column
#| echo: false
df %>%
# Transformo mis datos
filter(indice_tiempo == 2020) %>%
# Capa de mapeo
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
# Capa de geometria
geom_col(position = "stack")+
# Capas de escalas
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
# Capas de coordenadas
coord_flip() +
# Capas de tema
theme_uflo()+
labs(x= "", y= "Cantidad de establecimientos",
title = "Percepcion de subsidios al turismo por region",
subtitle = "Año 2020",
caption = "Fuente: Sistema de Información Turistica de la Argentina",
fill = "¿Recibio subsidio?")
library(gganimate)
turismo_no_residente_por_anio_y_medio_trasporte %>%
ggplot(aes(x = medio_de_transporte, y = viajes, fill = medio_de_transporte)) +
geom_col(show.legend = FALSE) +
labs(title = "Viajes en año: {as.integer(frame_time)}",
x = "Medio de transporte",
y = "Cantidad de viajes",
caption = "Fuente: Sistema de Información Turistica de la Argentina") +
transition_time(indice_tiempo_anio) +
theme_minimal()
turismo_no_residente_por_anio_y_medio_trasporte %>%
ggplot(aes(x = medio_de_transporte, y = viajes, fill = medio_de_transporte)) +
geom_col(show.legend = FALSE) +
scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M"))+
labs(title = "Viajes en año: {as.integer(frame_time)}",
x = "Medio de transporte",
y = "Cantidad de viajes",
caption = "Fuente: Sistema de Información Turistica de la Argentina")
library(gganimate)
turismo_no_residente_por_anio_y_medio_trasporte %>%
ggplot(aes(x = medio_de_transporte, y = viajes, fill = medio_de_transporte)) +
geom_col(show.legend = FALSE) +
scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M"))+
labs(title = "Viajes en año: {as.integer(frame_time)}",
x = "Medio de transporte",
y = "Cantidad de viajes",
caption = "Fuente: Sistema de Información Turistica de la Argentina") +
transition_time(indice_tiempo_anio) +
theme_minimal()
library(patchwork)
grafico3 + grafico2 + grafico1 +
guide_area() +
plot_layout(guides = "collect")
grafico2
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE))
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE)) %>%
ggplot(aes(x = as.factor(anio), y = vuelos, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE)) %>%
ggplot(aes(x = as.factor(anio), y = vuelos, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-5, suffix = "M"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE))
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE)) %>%
ggplot(aes(x = as.factor(anio), y = vuelos, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-5, suffix = "Mil"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = as.factor(anio), y = vuelos, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-5, suffix = "Mil"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = as.factor(anio), y = vuelos, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-5, suffix = "Mil"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = as.factor(anio), y = vuelos)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-5, suffix = "Mil"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, mes) %>%
summarise(pasajeros = sum(pasajeros, na.rm = TRUE)) %>%
ggplot(aes(x = mes, y = pasajeros, fill = as.factor(anio))) +
geom_col(position = "dodge") +
labs(title = "Pasajeros por mes y año", x = "Mes", y = "Pasajeros", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, mes) %>%
summarise(pasajeros = sum(pasajeros, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = mes, y = pasajeros, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "Millones"))+
labs(title = "Pasajeros por mes y año", x = "Mes", y = "Pasajeros", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
ggplot(aes(x = asientos, y = pasajeros, color = as.factor(anio))) +
geom_point(alpha = 0.5, show.legend = FALSE) +
labs(title = "Relación entre asientos y pasajeros", x = "Asientos", y = "Pasajeros", color = "Año") +
theme_minimal()
provincias<- read.csv("bases/provincia.csv")
provincias<- read.csv("bases/provincia.csv")
library(tidyverse)
library(sf)
summary(provincias)
