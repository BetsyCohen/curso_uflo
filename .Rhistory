pinguinos %>%
group_by(species) %>%
summarise( promedio_flipper = mean(flipper_length_mm,na.rm = T) )
pinguinos %>%
group_by(species) %>%
summarise( promedio_flipper = mean(flipper_length_mm,na.rm = T),
masa_corporal_promedio = mean(body_mass_g, na.rm = T))
pinguinos %>%
group_by(species) %>%
summarise( promedio_flipper = mean(flipper_length_mm,na.rm = T),
masa_corporal_promedio = mean(body_mass_g, na.rm = T))
pinguinos %>%
filter(anio == 2007) %>%
group_by(species) %>%
summarise(
promedio_flipper = mean(flipper_length_mm,na.rm = T),
masa_corporal_promedio = mean(body_mass_g, na.rm = T))
pinguinos %>%
filter(anio == "2007") %>%
group_by(species) %>%
summarise(
promedio_flipper = mean(flipper_length_mm,na.rm = T),
masa_corporal_promedio = mean(body_mass_g, na.rm = T))
pinguinos %>%
filter(year == "2007") %>%
group_by(species) %>%
summarise(
promedio_flipper = mean(flipper_length_mm,na.rm = T),
masa_corporal_promedio = mean(body_mass_g, na.rm = T))
pinguinos %>%
# filter(year == "2007") %>%
# group_by(species) %>%
summarise(
promedio_flipper = mean(flipper_length_mm,na.rm = T),
masa_corporal_promedio = mean(body_mass_g, na.rm = T))
pinguinos %>%
filter(year == "2007") %>%
group_by(species, island) %>%
summarise(
promedio_flipper = mean(flipper_length_mm,na.rm = T),
masa_corporal_promedio = mean(body_mass_g, na.rm = T))
#| code-fold: true
starwars %>%
select(name, gender) %>%
group_by(gender) %>%
summarise(count = n(), .groups = "drop") %>%
ggplot(aes(x = gender, y = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Cantidad de personajes por género en peliculas de Starwars",
x = "Género",
y = "Cantidad de personajes"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#| context: setup
#| include: false
library(tidyverse)
library(scales)
library(ggplot2)
library(waffle)
library(treemapify)
library(eph)
library(showtext)
font_add_google("Poppins")
font_add_google("Montserrat")
showtext_auto()
theme_uflo <- function() {
titles_font_family <- "Poppins"
base_font_family <- "Montserrat"
theme_minimal() +
theme(
# Leyenda
legend.position = "left",
legend.text = element_text(family = base_font_family),
legend.title = element_text(family = titles_font_family),
# Grid
panel.grid.major = element_line(linewidth = 0.25, color = "#F3F3F3"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = unit(0.75, "lines"),
panel.background = element_rect(fill = "transparent", color = "transparent"),
# Ejes
axis.title = element_text(family = titles_font_family),
axis.text = element_text(family = base_font_family),
# Facetas
strip.text = element_text(family = titles_font_family, hjust = 0, color = "white", size = 12),
strip.background = element_rect(fill = "black"),
# Texto
text = element_text(family = base_font_family, size = 15, color = "black"),
# Aspectos principales
plot.title = element_text(family = titles_font_family, size = 30),
plot.subtitle = element_text(family = titles_font_family, color = "#8a8a8a", size = 15),
plot.caption = element_text(family = titles_font_family),
plot.background = element_rect(fill = "transparent", color = "transparent")
)
}
theme_set(theme_uflo())
#| code-fold: true
starwars %>%
select(name, gender) %>%
group_by(gender) %>%
summarise(count = n(), .groups = "drop") %>%
ggplot(aes(x = gender, y = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Cantidad de personajes por género en peliculas de Starwars",
x = "Género",
y = "Cantidad de personajes"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#| code-fold: true
#| warning: false
lineas <- get_poverty_lines()
lineas %>%
select(-ICE) %>%
pivot_longer(cols = c("CBA", "CBT"), names_to = "canasta", values_to = "valor") %>%
ggplot() +
geom_line(aes(x = periodo, y = valor, col = canasta))+
labs(
title = "Canastas basica alimentaria y canasta total",
subtitle = "Encuesta Permanente de Hogares INDEC",
fill = "Color de ojos"
)
#| context: setup
#| include: false
library(tidyverse)
library(showtext)
font_add_google("Poppins")
font_add_google("Montserrat")
showtext_auto()
theme_uflo <- function() {
titles_font_family <- "Poppins"
base_font_family <- "Montserrat"
theme_minimal() +
theme(
# Leyenda
legend.position = "bottom",
legend.text = element_text(family = base_font_family),
legend.title = element_text(family = titles_font_family),
# Grid
panel.grid.major = element_line(linewidth = 0.25, color = "#F3F3F3"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = unit(0.75, "lines"),
panel.background = element_rect(fill = "transparent", color = "transparent"),
# Ejes
axis.title = element_text(family = titles_font_family),
axis.text = element_text(family = base_font_family),
# Facetas
strip.text = element_text(family = titles_font_family, hjust = 0, color = "white", size = 12),
strip.background = element_rect(fill = "black"),
# Texto
text = element_text(family = base_font_family, size = 15, color = "black"),
# Aspectos principales
plot.title = element_text(family = titles_font_family, size = 30),
plot.subtitle = element_text(family = titles_font_family, color = "#8a8a8a", size = 15),
plot.caption = element_text(family = titles_font_family),
plot.background = element_rect(fill = "transparent", color = "transparent")
)
}
## Datasets para otros ejemplos
### Ejemplo gganimate
url_turismo_receptivo<- ("https://datos.yvera.gob.ar/dataset/4cbf7d4a-702a-4911-8c1e-717a45214902/resource/fdfe0ae4-4acc-4421-aa48-6149a02bc615/download/turistas-no-residentes-serie.csv")
df_turismo_receptivo <- read.csv(url_turismo_receptivo)
df_turismo_receptivo <- df_turismo_receptivo %>%
mutate(indice_tiempo_anio = year(as.Date(indice_tiempo)))
turismo_no_residente_por_anio_y_medio_trasporte <- df_turismo_receptivo %>%
group_by(indice_tiempo_anio, medio_de_transporte) %>%
summarise(viajes = sum(viajes_de_turistas_no_residentes, na.rm = TRUE), .groups = 'drop')
### Ejemplo patchwork
df_vuelos_asientos_pasajeros <- read.csv("https://datos.yvera.gob.ar/dataset/c0e7bc3d-553c-405c-8b32-79282b28ffd5/resource/03b4176f-a065-450a-b411-101d2a884720/download/vuelos_asientos_pasajeros.csv")
df_vuelos_asientos_pasajeros <- df_vuelos_asientos_pasajeros %>%
mutate(
indice_tiempo = as.Date(indice_tiempo),
anio = year(indice_tiempo),
mes = month(indice_tiempo, label = TRUE),
dia = day(indice_tiempo)
)
grafico1 <- df_vuelos_asientos_pasajeros %>%
group_by(anio, mes) %>%
summarise(pasajeros = sum(pasajeros, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = mes, y = pasajeros, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "Millones"))+
labs(title = "Pasajeros por mes y año", x = "Mes", y = "Pasajeros", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
grafico2 <- df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = as.factor(anio), y = vuelos)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-5, suffix = "Mil"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos") +
theme_minimal() +
theme(legend.position = "bottom")
grafico3 <- df_vuelos_asientos_pasajeros %>%
ggplot(aes(x = asientos, y = pasajeros, color = as.factor(anio))) +
geom_point(alpha = 0.5, show.legend = FALSE) +
labs(title = "Relación entre asientos y pasajeros", x = "Asientos", y = "Pasajeros", color = "Año") +
theme_minimal()
library(esquisse)
library(tidyverse)
View(df_vuelos_asientos_pasajeros)
View(df_vuelos_asientos_pasajeros)
esquisser(df_vuelos_asientos_pasajeros)
ggplot(df_vuelos_asientos_pasajeros) +
aes(x = indice_tiempo, y = pasajeros) +
geom_line(colour = "#EF562D") +
labs(x = "Indice de tiempo", y = "Pasajeros", title = "Pasajeros por indice de tiempo", subtitle = "lalala") +
theme_minimal()
ggplot(df_vuelos_asientos_pasajeros) +
aes(x = indice_tiempo, y = pasajeros) +
geom_line(colour = "#EF562D") +
labs(x = "Indice de tiempo",
y = "Pasajeros",
title = "Pasajeros por indice de tiempo",
subtitle = "lalala") +
theme_classic()
gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarise(lifeExp = median(lifeExp))
#| label: "llamar librerias y resumen de base"
#| echo: true
#| warning: false
# llamo a mis librerías
library(tidyverse) # para tidyeo de datos
library(ggplot2) # para hacer graficos
library(gapminder) # libreria con datos varios
summary(gapminder)
gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarise(lifeExp = median(lifeExp))
#> # A tibble: 5 × 2
gapminder %>%
group_by(year) %>%
summarise(lifeExp = median(lifeExp))
gapminder %>%
group_by(continent,year) %>%
summarise(lifeExp = median(lifeExp))
gapminder %>%
group_by(continent,year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y =lifeExp, fill = continent)) +
geom_point()
summary(gapminder)
gapminder %>%
group_by(continent,year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y =lifeExp, size = continent)) +
geom_point()
gapminder %>%
group_by(continent,year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y =lifeExp, size = pop)) +
geom_point()
gapminder %>%
group_by(continent,year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y =lifeExp, size = pop)) +
geom_point()
summary(gapminder)
gapminder %>%
group_by(continent,year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y =lifeExp, size = pop)) +
geom_point()
gapminder %>%
ggplot(aes(x = year, y =lifeExp, size = pop)) +
geom_point()
gapminder %>%
group_by(continent)
gapminder %>%
group_by(continent) %>%
ggplot(aes(x = year, y =lifeExp, size = pop)) +
geom_point()
gapminder %>%
group_by(continent) %>%
ggplot(aes(x = year, y =lifeExp, size = pop, fill = continent)) +
geom_point()
gapminder %>%
group_by(continent) %>%
ggplot(aes(x = year, y =lifeExp, size = pop, fill = continent)) +
geom_point()+
scale_size(name = "Tamaño", range = c(3, 15))
gapminder %>%
group_by(continent) %>%
ggplot(aes(x = year, y =lifeExp, size = pop)) +
geom_point()
ggplot(gapminder, aes(x = year, y = lifeExp,
size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_size(range = c(1, 15), guide = "none") +  # para que las burbujas no sean gigantes
scale_color_brewer(palette = "Set1") +
labs(
title = "Evolución de la esperanza de vida según población",
subtitle = "Por continente, datos de Gapminder (1952-2007)",
x = "Año",
y = "Esperanza de vida (años)",
color = "Continente"
) +
theme_minimal()
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_x_log10() +
scale_size(range = c(2, 12)) +
labs(title = "Año: {frame_time}", x = "PBI per cápita (log)", y = "Esperanza de vida") +
transition_time(year) +
ease_aes('linear') +
theme_minimal()
library(gganimate)
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_x_log10() +
scale_size(range = c(2, 12)) +
labs(title = "Año: {frame_time}", x = "PBI per cápita (log)", y = "Esperanza de vida") +
transition_time(year) +
ease_aes('linear') +
theme_minimal()
gapminder %>%
filter(max(year))
gapminder %>%
filter(max(year))
gapminder %>%
filter(year == 2007)
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y= gdpPercap, size = pop, fill = continent)) +
geom_point()
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y= gdpPercap, size = pop, color = continent)) +
geom_point()
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y= gdpPercap, size = pop, color = continent)) +
geom_point() +
scale_x_log10()
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y= gdpPercap, size = pop, color = continent)) +
geom_point()
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y= gdpPercap, size = pop, color = continent)) +
geom_point() +
scale_size(range = c(2, 12)) +
```
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y= gdpPercap, size = pop, color = continent)) +
geom_point() +
scale_size(range = c(2, 12))
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point() +
scale_size(range = c(2, 12)) +
labs(title = "GDP per capitas seg Esperanza de vida")
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point() +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Población")
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point() +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Población",
color = "Continente")
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point() +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Población",
color = "Continente")+
ease_aes('linear')
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Población",
color = "Continente")+
```
gapminder %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Población",
color = "Continente")+
theme_minimal()
gapminder %>%
mutate(pop = pop/10) %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Población",
color = "Continente")+
theme_minimal()
gapminder %>%
mutate(pop = pop/100000) %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Población",
color = "Continente")+
theme_minimal()
gapminder %>%
mutate(pop = pop/1000000) %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Población",
color = "Continente")+
theme_minimal()
gapminder %>%
mutate(pop = pop/1000000) %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Millones de habitantes",
color = "Continente")+
theme_minimal()
#| label: fig-pbilifexp
#| fig-cap: "Esperanza de vida y PBI per capita."
#| warning: false
gapminder %>%
mutate(pop = pop/1000000) %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
subtitle = "Año 2007",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Millones de habitantes",
color = "Continente")+
theme_minimal()
#| label: fig-pbilifexp
#| fig-cap: "Esperanza de vida y PBI per capita."
#| warning: false
gapminder %>%
mutate(pop = pop/1000000) %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
subtitle = "Año 2007",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Millones de habitantes",
color = "Continente")+
theme_minimal()
#| echo: true
#| output: column
# Esto es un bloque de código R
library(tidyverse)
library(gapminder)
gapminder %>%
mutate(pop = pop/1000000) %>%
filter(year == 2007) %>%
ggplot(aes(x = gdpPercap, y= lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_size(range = c(2, 12)) +
labs(title = "PBI per capita según Esperanza de vida y tamaño deblación",
subtitle = "Año 2007",
x = "PBI per capita",
y = "Esperanza de vida",
size = "Millones de habitantes",
color = "Continente")+
theme_minimal()
-   haciendo clic en el botón verde **c+** en la parte superior del quarto document ![](images/boton_chunck.png){width="1100}
