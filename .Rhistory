summarise(count = n(), .groups = "drop") %>%
ggplot(aes(x = films, y = count, fill = gender)) +
geom_bar(stat = "identity") +  # <- apiladas por default
labs(
title = "Personajes de Star Wars por genero y pelicula",
x = "Película",
y = "Cantidad de personajes",
fill = "Género"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#| code-fold: true
starwars %>%
filter(!is.na(eye_color)) %>%
count(eye_color, name = "cantidad") %>%
ggplot(aes(x = reorder(eye_color, cantidad), y = cantidad)) +
geom_segment(aes(xend = eye_color, y = 0, yend = cantidad), color = "gray") +
geom_point(size = 4, color = "steelblue") +
coord_flip() +
labs(
title = "Personajes en Star Wars por color de sus ojos ",
x = "Color de ojos",
y = "Cantidad"
) +
theme_minimal()
#| code-fold: true
starwars %>%
filter(!is.na(gender)) %>%
count(gender, name = "cantidad") %>%
ggplot(aes(x = "", y = cantidad, fill = gender)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(
title = "Distribución de personajes por género (Star Wars)",
fill = "Género"
) +
theme_void()
#| code-fold: true
starwars %>%
filter(!is.na(gender)) %>%
count(gender, name = "cantidad") %>%
ggplot(aes(x = "", y = cantidad, fill = gender)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(
title = "Personajes de Star Wars por género",
fill = "Género"
) +
theme_void()
#| code-fold: true
starwars %>%
filter(!is.na(gender)) %>%
count(gender, name = "cantidad") %>%
ggplot(aes(x = 2, y = cantidad, fill = gender)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
xlim(0.5, 2.5) +
labs(
title = "Personajes de Star Wars por género",
fill = "Género"
) +
theme_void() +
theme(plot.title = element_text(hjust = 0.5))
#| code-fold: true
#| warning: false
# Preparamos los datos
generos <- starwars %>%
filter(!is.na(gender)) %>%
count(gender, name = "cantidad") %>%
arrange(desc(cantidad))
# Gráfico waffle
waffle::waffle(
parts = setNames(generos$cantidad, generos$gender),
rows = 10,
title = "Personajes por género",
colors = RColorBrewer::brewer.pal(n = nrow(generos), name = "Set2")
)
#| code-fold: true
starwars %>%
filter(!is.na(eye_color)) %>%
count(eye_color, name = "cantidad") %>%
ggplot(aes(area = cantidad, fill = eye_color, label = paste(eye_color, cantidad))) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "centre", grow = TRUE) +
labs(
title = "Personajes por color de ojos ",
fill = "Color de ojos"
) +
theme_minimal()
#| code-fold: true
starwars %>%
filter(!is.na(gender)) %>%
count(gender, name = "cantidad") %>%
ggplot(aes(x = 2, y = cantidad, fill = gender)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
xlim(0.5, 2.5) +
labs(
title = "Personajes de Star Wars por género",
fill = "Género"
) +
theme_void() +
theme(plot.title = element_text(hjust = 0.5))+
scale_color_brewer(palette = "Set2")
#| code-fold: true
starwars %>%
filter(!is.na(gender)) %>%
count(gender, name = "cantidad") %>%
ggplot(aes(x = 2, y = cantidad, fill = gender)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
xlim(0.5, 2.5) +
labs(
title = "Personajes de Star Wars por género",
fill = "Género"
) +
theme_void() +
theme(plot.title = element_text(hjust = 0.5))+
scale_color_brewer(palette = "Set3")
#| code-fold: true
starwars %>%
filter(!is.na(gender)) %>%
count(gender, name = "cantidad") %>%
ggplot(aes(x = 2, y = cantidad, fill = gender)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
xlim(0.5, 2.5) +
labs(
title = "Personajes de Star Wars por género",
fill = "Género"
) +
theme_void() +
theme(plot.title = element_text(hjust = 0.5))
#| code-fold: true
lineas <- get_poverty_lines()
lineas %>%
select(-ICE) %>%
pivot_longer(cols = c("CBA", "CBT"), names_to = "canasta", values_to = "valor") %>%
ggplot() +
geom_line(aes(x = periodo, y = valor, col = canasta))+
labs(
title = "Canastas de canasta basica alimentaria y canasta basica total",
subtitle = "Encuesta Permanente de Hogares INDEC",
fill = "Color de ojos"
) +
theme_minimal()
gapminder::gapminder
populatrion_data <- gapminder::gapminder %>%
group_by(year,continent) %>%
summarise(total_pop = sum(pop, .groups = "drop"))
pop_data <- gapminder %>%
group_by(year, continent) %>%
summarise(total_pop = sum(pop), .groups = "drop")
pop_data <- gapminder::gapminder %>%
group_by(year, continent) %>%
summarise(total_pop = sum(pop), .groups = "drop")
View(pop_data)
View(pop_data)
ggplot(pop_data, aes(x = year, y = total_pop, fill = continent))+
geom_area(alpha = 0.8, color = "white")+
scale_y_continuous(labels = label_number(scale = 1e-9, suffix = "B"))+
labs(
title = "Evolucion de la poblacion total por continente",
x = "Año",
y = "población (en miles de millones",
fill = "Continentes"
)
theme_uflo <- function() {
titles_font_family <- "Poppins"
base_font_family <- "Montserrat"
theme_minimal() +
theme(
# Leyenda
legend.position = "left",
legend.text = element_text(family = base_font_family),
legend.title = element_text(family = titles_font_family),
# Grid
panel.grid.major = element_line(linewidth = 0.25, color = "#F3F3F3"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = unit(0.75, "lines"),
panel.background = element_rect(fill = "transparent", color = "transparent"),
# Ejes
axis.title = element_text(family = titles_font_family),
axis.text = element_text(family = base_font_family),
# Facetas
strip.text = element_text(family = titles_font_family, hjust = 0, color = "white", size = 12),
strip.background = element_rect(fill = "black"),
# Texto
text = element_text(family = base_font_family, size = 10, color = "black"),
# Aspectos principales
plot.title = element_text(family = titles_font_family, size = 30),
plot.subtitle = element_text(family = titles_font_family, color = "#8a8a8a", size = 15),
plot.caption = element_text(family = titles_font_family),
plot.background = element_rect(fill = "transparent", color = "transparent")
)
}
theme_set(theme_uflo())
ggplot(pop_data, aes(x = year, y = total_pop, fill = continent))+
geom_area(alpha = 0.8, color = "white")+
scale_y_continuous(labels = label_number(scale = 1e-9, suffix = "B"))+
labs(
title = "Evolucion de la poblacion total por continente",
x = "Año",
y = "población (en miles de millones",
fill = "Continentes"
)
lineas %>%
select(-ICE) %>%
pivot_longer(cols = c("CBA", "CBT"), names_to = "canasta", values_to = "valor") %>%
ggplot() +
geom_line(aes(x = periodo, y = valor, col = canasta))+
labs(
title = "Canastas de canasta basica alimentaria y canasta basica total",
subtitle = "Encuesta Permanente de Hogares INDEC",
fill = "Color de ojos"
)
theme_uflo <- function() {
titles_font_family <- "Poppins"
base_font_family <- "Montserrat"
theme_minimal() +
theme(
# Leyenda
legend.position = "left",
legend.text = element_text(family = base_font_family),
legend.title = element_text(family = titles_font_family),
# Grid
panel.grid.major = element_line(linewidth = 0.25, color = "#F3F3F3"),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = unit(0.75, "lines"),
panel.background = element_rect(fill = "transparent", color = "transparent"),
# Ejes
axis.title = element_text(family = titles_font_family),
axis.text = element_text(family = base_font_family),
# Facetas
strip.text = element_text(family = titles_font_family, hjust = 0, color = "white", size = 12),
strip.background = element_rect(fill = "black"),
# Texto
text = element_text(family = base_font_family, size = 10, color = "black"),
# Aspectos principales
plot.title = element_text(family = titles_font_family, size = 15),
plot.subtitle = element_text(family = titles_font_family, color = "#8a8a8a", size = 10),
plot.caption = element_text(family = titles_font_family),
plot.background = element_rect(fill = "transparent", color = "transparent")
)
}
theme_set(theme_uflo())
starwars %>%
select(name, gender) %>%
group_by(gender) %>%
summarise(count = n(), .groups = "drop") %>%
ggplot(aes(x = gender, y = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Cantidad de personajes por género en peliculas de Starwars",
x = "Género",
y = "Cantidad de personajes"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#| code-fold: true
starwars %>%
select(name, gender, films) %>%
unnest(films) %>%
group_by(films, gender) %>%
summarise(count = n(), .groups = "drop") %>%
ggplot(aes(x = films, y = count, fill = gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Cantidad de personajes por género AGRUPADAS cada película de Star Wars",
x = "Película",
y = "Cantidad de personajes",
fill = "Género"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
starwars %>%
select(name, gender, films) %>%
unnest(films) %>%
group_by(films, gender) %>%
summarise(count = n(), .groups = "drop") %>%
ggplot(aes(x = films, y = count, fill = gender)) +
geom_bar(stat = "identity") +  # <- apiladas por default
labs(
title = "Personajes de Star Wars por genero y pelicula",
x = "Película",
y = "Cantidad de personajes",
fill = "Género"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#| code-fold: true
starwars %>%
filter(!is.na(eye_color)) %>%
count(eye_color, name = "cantidad") %>%
ggplot(aes(x = reorder(eye_color, cantidad), y = cantidad)) +
geom_segment(aes(xend = eye_color, y = 0, yend = cantidad), color = "gray") +
geom_point(size = 4, color = "steelblue") +
coord_flip() +
labs(
title = "Personajes en Star Wars por color de sus ojos ",
x = "Color de ojos",
y = "Cantidad"
)
#| code-fold: true
starwars %>%
filter(!is.na(gender)) %>%
count(gender, name = "cantidad") %>%
ggplot(aes(x = "", y = cantidad, fill = gender)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(
title = "Personajes de Star Wars por género",
fill = "Género"
)
#| code-fold: true
starwars %>%
filter(!is.na(gender)) %>%
count(gender, name = "cantidad") %>%
ggplot(aes(x = 2, y = cantidad, fill = gender)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
xlim(0.5, 2.5) +
labs(
title = "Personajes de Star Wars por género",
fill = "Género"
) +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico waffle
waffle::waffle(
parts = setNames(generos$cantidad, generos$gender),
rows = 10,
title = "Personajes por género",
colors = RColorBrewer::brewer.pal(n = nrow(generos), name = "Set2")
)
# Gráfico waffle
waffle::waffle(
parts = setNames(generos$cantidad, generos$gender),
rows = 10,
title = "Personajes por género",
colors = RColorBrewer::brewer.pal(n = nrow(generos), name = "Set2")
)+ theme_uflo()
#| code-fold: true
starwars %>%
filter(!is.na(eye_color)) %>%
count(eye_color, name = "cantidad") %>%
ggplot(aes(area = cantidad, fill = eye_color, label = paste(eye_color, cantidad))) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "centre", grow = TRUE) +
labs(
title = "Personajes por color de ojos ",
fill = "Color de ojos"
)
lineas %>%
select(-ICE) %>%
pivot_longer(cols = c("CBA", "CBT"), names_to = "canasta", values_to = "valor") %>%
ggplot() +
geom_line(aes(x = periodo, y = valor, col = canasta))+
labs(
title = "Canastas de canasta basica alimentaria y canasta basica total",
subtitle = "Encuesta Permanente de Hogares INDEC",
fill = "Color de ojos"
)
lineas %>%
select(-ICE) %>%
pivot_longer(cols = c("CBA", "CBT"), names_to = "canasta", values_to = "valor") %>%
ggplot() +
geom_line(aes(x = periodo, y = valor, col = canasta))+
labs(
title = "Canastas basica alimentaria y canasta total",
subtitle = "Encuesta Permanente de Hogares INDEC",
fill = "Color de ojos"
)
ggplot(pop_data, aes(x = year, y = total_pop, fill = continent))+
geom_area(alpha = 0.8, color = "white")+
scale_y_continuous(labels = label_number(scale = 1e-9, suffix = "B"))+
labs(
title = "Evolucion de la poblacion total por continente",
x = "Año",
y = "población (en miles de millones",
fill = "Continentes"
)
ggplot(pop_data, aes(x = year, y = total_pop, fill = continent))+
geom_area(alpha = 0.8, color = "white")+
scale_y_continuous(labels = label_number(scale = 1e-9, suffix = "B"))+
labs(
title = "Evolucion de la poblacion total por continente",
subtitle = "Fuente Gapminder",
x = "Año",
y = "población (en miles de millones",
fill = "Continentes"
)
#| code-fold: true
pop_data <- gapminder::gapminder %>%
group_by(year, continent) %>%
summarise(total_pop = sum(pop), .groups = "drop")
ggplot(pop_data, aes(x = year, y = total_pop, fill = continent))+
geom_area(alpha = 0.8, color = "white")+
scale_y_continuous(labels = label_number(scale = 1e-9, suffix = "B"))+
labs(
title = "Evolucion de la poblacion total por continente",
subtitle = "Fuente Gapminder",
x = "Año",
y = "población (en miles de millones",
fill = "Continentes"
)
ggplot(gapminder, aes(x = lifeExp)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "white") +
labs(
title = "Histograma de la esperanza de vida",
x = "Esperanza de vida",
y = "Frecuencia"
)
ggplot(gapminder::gapminder, aes(x = lifeExp)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "white") +
labs(
title = "Histograma de la esperanza de vida",
x = "Esperanza de vida",
y = "Frecuencia"
)
ggplot(gapminder::gapminder, aes(x = lifeExp, fill = continent)) +
geom_density(alpha = 0.6) +
labs(
title = "Densidad de esperanza de vida por continente",
x = "Esperanza de vida",
y = "Densidad",
fill = "Continente"
)
ggplot(gapminder::gapminder, aes(x = continent, y = gdpPercap, fill = continent)) +
geom_boxplot() +
scale_y_log10() +  # Escala logarítmica para ver mejor los valores extremos
labs(
title = "Distribución del PBI per cápita por continente",
x = "Continente",
y = "PBI per cápita (escala log)"
)
ggplot(gapminder::gapminder, aes(x = continent, y = gdpPercap, fill = continent)) +
geom_boxplot() +
scale_y_log10() +  # Escala logarítmica para ver mejor los valores extremos
labs(
title = "Distribución del PBI per cápita por continente",
x = "Continente",
y = "PBI per cápita (escala log)"
)
#| code-fold: true
ggplot(gapminder::gapminder, aes(x = continent, y = gdpPercap, fill = continent)) +
geom_boxplot() +
scale_y_log10() +  # Escala logarítmica para ver mejor los valores extremos
labs(
title = "Distribución del PBI per cápita por continente",
x = "Continente",
y = "PBI per cápita (escala log)"
)
#| code-fold: true
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
labs(
title = "Relación entre PBI per cápita y esperanza de vida",
x = "PBI per cápita (log)",
y = "Esperanza de vida",
color = "Continente"
)
#| code-fold: true
ggplot(gapminder::gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
labs(
title = "Relación entre PBI per cápita y esperanza de vida",
x = "PBI per cápita (log)",
y = "Esperanza de vida",
color = "Continente"
)
#| code-fold: true
selected_countries <- gapminder::gapminder %>%
group_by(country) %>%
summarise(mean_lifeExp = mean(lifeExp)) %>%
top_n(15, mean_lifeExp) %>%
pull(country)
gap_heatmap <- gapminder::gapminder %>%
filter(country %in% selected_countries)
ggplot(gap_heatmap, aes(x = factor(year), y = country, fill = lifeExp)) +
geom_tile() +
scale_fill_viridis_c() +
labs(
title = "Heatmap de esperanza de vida por país y año",
x = "Año",
y = "País",
fill = "Esperanza de vida"
)
#| code-fold: true
ggplot(gapminder %>% filter(year == 2007),
aes(x = gdpPercap, y = lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_x_log10() +
labs(
title = "Relación entre PBI, esperanza de vida y población (2007)",
x = "PBI per cápita (log)",
y = "Esperanza de vida",
size = "Población",
color = "Continente"
)
#| code-fold: true
ggplot(gapminder::gapminder %>% filter(year == 2007),
aes(x = gdpPercap, y = lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_x_log10() +
labs(
title = "Relación entre PBI, esperanza de vida y población (2007)",
x = "PBI per cápita (log)",
y = "Esperanza de vida",
size = "Población",
color = "Continente"
)
