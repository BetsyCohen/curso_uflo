# Capa de mapeo
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
# Capa de geometria
geom_col(position = "stack")+
# Capas de escalas
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
# Capas de coordenadas
coord_flip() +
# Capas de tema
theme_uflo()+
labs(x= "", y= "Cantidad de establecimientos",
title = "Percepcion de subsidios al turismo por region",
subtitle = "Año 2020",
caption = "Fuente: Sistema de Información Turistica de la Argentina",
fill = "¿Recibio subsidio?")
#| warning: false
#| output-location: column
#| echo: false
df %>%
# Transformo mis datos
filter(indice_tiempo == 2020) %>%
# Capa de mapeo
ggplot(aes(x= region, y= establecimientos, fill = recibio_subsidio)) +
# Capa de geometria
geom_col(position = "stack")+
# Capas de escalas
scale_y_continuous(
limits = c(0,10000),
n.breaks = 5)+
scale_fill_manual(values= c("#cf4c4c","#7cccaf"))+
# Capas de coordenadas
coord_flip() +
# Capas de tema
theme_uflo()+
labs(x= "", y= "Cantidad de establecimientos",
title = "Percepcion de subsidios al turismo por region",
subtitle = "Año 2020",
caption = "Fuente: Sistema de Información Turistica de la Argentina",
fill = "¿Recibio subsidio?")
library(gganimate)
turismo_no_residente_por_anio_y_medio_trasporte %>%
ggplot(aes(x = medio_de_transporte, y = viajes, fill = medio_de_transporte)) +
geom_col(show.legend = FALSE) +
labs(title = "Viajes en año: {as.integer(frame_time)}",
x = "Medio de transporte",
y = "Cantidad de viajes",
caption = "Fuente: Sistema de Información Turistica de la Argentina") +
transition_time(indice_tiempo_anio) +
theme_minimal()
turismo_no_residente_por_anio_y_medio_trasporte %>%
ggplot(aes(x = medio_de_transporte, y = viajes, fill = medio_de_transporte)) +
geom_col(show.legend = FALSE) +
scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M"))+
labs(title = "Viajes en año: {as.integer(frame_time)}",
x = "Medio de transporte",
y = "Cantidad de viajes",
caption = "Fuente: Sistema de Información Turistica de la Argentina")
library(gganimate)
turismo_no_residente_por_anio_y_medio_trasporte %>%
ggplot(aes(x = medio_de_transporte, y = viajes, fill = medio_de_transporte)) +
geom_col(show.legend = FALSE) +
scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M"))+
labs(title = "Viajes en año: {as.integer(frame_time)}",
x = "Medio de transporte",
y = "Cantidad de viajes",
caption = "Fuente: Sistema de Información Turistica de la Argentina") +
transition_time(indice_tiempo_anio) +
theme_minimal()
library(patchwork)
grafico3 + grafico2 + grafico1 +
guide_area() +
plot_layout(guides = "collect")
grafico2
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE))
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE)) %>%
ggplot(aes(x = as.factor(anio), y = vuelos, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE)) %>%
ggplot(aes(x = as.factor(anio), y = vuelos, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-5, suffix = "M"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE))
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE)) %>%
ggplot(aes(x = as.factor(anio), y = vuelos, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-5, suffix = "Mil"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = as.factor(anio), y = vuelos, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-5, suffix = "Mil"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = as.factor(anio), y = vuelos, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-5, suffix = "Mil"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, clasificacion_vuelo) %>%
summarise(vuelos = sum(vuelos, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = as.factor(anio), y = vuelos)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-5, suffix = "Mil"))+
labs(title = "Vuelos por tipo y año", x = "Año", y = "Vuelos") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, mes) %>%
summarise(pasajeros = sum(pasajeros, na.rm = TRUE)) %>%
ggplot(aes(x = mes, y = pasajeros, fill = as.factor(anio))) +
geom_col(position = "dodge") +
labs(title = "Pasajeros por mes y año", x = "Mes", y = "Pasajeros", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
group_by(anio, mes) %>%
summarise(pasajeros = sum(pasajeros, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = mes, y = pasajeros, fill = as.factor(anio))) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "Millones"))+
labs(title = "Pasajeros por mes y año", x = "Mes", y = "Pasajeros", fill = "Año") +
theme_minimal() +
theme(legend.position = "bottom")
df_vuelos_asientos_pasajeros %>%
ggplot(aes(x = asientos, y = pasajeros, color = as.factor(anio))) +
geom_point(alpha = 0.5, show.legend = FALSE) +
labs(title = "Relación entre asientos y pasajeros", x = "Asientos", y = "Pasajeros", color = "Año") +
theme_minimal()
provincias<- read.csv("bases/provincia.csv")
provincias<- read.csv("bases/provincia.csv")
library(tidyverse)
library(sf)
summary(provincias)
i
library(tidyverse)
library(sf) # Para trabajar con datos geoespaciales
library(leaflet) # Para mapas interactivos
# --- Cargar el GeoJSON de provincias argentinas ---
# Fuente: Repositorio público en GitHub (ejemplo)
# Esta URL puede cambiar, si falla, habrá que buscar una alternativa actualizada.
url_provincias_geojson <- "https://raw.githubusercontent.com/codeforamerica/click_that_hood/master/public/data/argentina-provinces.geojson"
# Leemos el archivo GeoJSON
provincias_sf <- read_sf(url_provincias_geojson)
# --- Cargar el GeoJSON de provincias argentinas ---
# Fuente: Repositorio público en GitHub (ejemplo)
# Esta URL puede cambiar, si falla, habrá que buscar una alternativa actualizada.
url_provincias_geojson <- "https://wms.ign.gob.ar/geoserver/ign/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=ign%3Aprovincia&outputFormat=application%2Fjson"
# Leemos el archivo GeoJSON
provincias_sf <- read_sf(url_provincias_geojson)
# Vistazo a los datos de la geometría (polígonos)
glimpse(provincias_sf)
# Vistazo a los datos de la geometría (polígonos)
glimpse(provincias_sf)
geom_sf(data = provincias_sf)
geom_sf(data = provincias_sf,fill = "grey90", color = "white")
ggplot()+
geom_sf(data = provincias_sf)
ggplot()+
geom_sf(data = provincias_sf)+
coord_sf(xlim = c(-75, -53), ylim = c(-56, -21), expand = FALSE)
View(provincias_sf)
provincias_sf %>%
filter(!nam %in% c("Tierra del Fuego, Antártida e Islas del Atlántico Sur")) %>%
ggplot()+
geom_sf()+
coord_sf(expand = FALSE)
provincias_sf %>%
filter(!nam %in% c("Tierra del Fuego, Antártida e Islas del Atlántico Sur")) %>%
ggplot()+
geom_sf()+
coord_sf(expand = TRUE)
provincias_sf %>%
ggplot()+
geom_sf()+
coord_sf(xlim = c(-75, -53), ylim = c(-56, -21), expand = FALSE)
provincias_sf %>%
ggplot()+
geom_sf()+
coord_sf(xlim = c(-75, -53), ylim = c(-56, -21), expand = TRUE)
provincias_sf %>%
ggplot()+
geom_sf()+
coord_sf(xlim = c(-75, -53), ylim = c(-56, -21), expand = TRUE)
#| warning: false
#| output-location: slide
#| out.width: "100%"
#| out.height: "500px" # Ajusta la altura del mapa
# Crear mapa leaflet
leaflet(data = bibliotecas) %>%
addTiles() %>% # Añade un mapa base (OpenStreetMap por defecto)
addCircleMarkers( # Añade marcadores circulares para cada biblioteca
lng = ~longitud, # Mapea longitud a la coordenada x
lat = ~latitud,  # Mapea latitud a la coordenada y
radius = 2, # Tamaño pequeño del círculo
stroke = FALSE, # Sin borde
fillOpacity = 0.8, # Opacidad del relleno
color = "steelblue", # Color de los puntos
popup = ~paste("<b>", nombre, "</b><br>", domicilio, "<br>", localidad, ", ", provincia) # Información al hacer clic
) %>%
# Agrego un marcador fijo en las Malvinas
addLabelOnlyMarkers(
lng = -59.5, lat = -51.7, # Aproximadamente el centro de las islas
label = "Malvinas Argentinas",
labelOptions = labelOptions(
noHide = TRUE, # siempre visible
direction = "top",
textOnly = TRUE,
style = list(
"color" = "black",
"font-weight" = "bold",
"font-size" = "14px"
)
)
) %>%
# Opcional: Ajustar la vista inicial
setView(lng = -64, lat = -34, zoom = 4) # Centrar en Argentina
# ---  Cargamos las librerías que vamos a usar ---
library(tidyverse) # que me trae entre ellos ggplot el cual usaremos para mapas estáticos
library(sf) # Para trabajar con datos geoespaciales
library(leaflet) # Para mapas interactivos
# --- Cargamos el GeoJSON de provincias argentinas del IGN ---
# Esta URL puede cambiar, si falla, habrá que buscar una alternativa actualizada.
url_provincias_geojson <- "https://wms.ign.gob.ar/geoserver/ign/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=ign%3Aprovincia&outputFormat=application%2Fjson"
# ---Asignamos el archivo GeoJSON al objeto provincias_sf
provincias_sf <- read_sf(url_provincias_geojson)
library(leaflet)
library(tidyverse)
#| warning: false
#| output-location: slide
#| out.width: "100%"
#| out.height: "500px" # Ajusta la altura del mapa
# Crear mapa leaflet
leaflet(data = bibliotecas) %>%
addTiles() %>% # Añade un mapa base (OpenStreetMap por defecto)
addCircleMarkers( # Añade marcadores circulares para cada biblioteca
lng = ~longitud, # Mapea longitud a la coordenada x
lat = ~latitud,  # Mapea latitud a la coordenada y
radius = 2, # Tamaño pequeño del círculo
stroke = FALSE, # Sin borde
fillOpacity = 0.8, # Opacidad del relleno
color = "steelblue", # Color de los puntos
popup = ~paste("<b>", nombre, "</b><br>", domicilio, "<br>", localidad, ", ", provincia) # Información al hacer clic
) %>%
# Agrego un marcador fijo en las Malvinas
addLabelOnlyMarkers(
lng = -59.5, lat = -51.7, # Aproximadamente el centro de las islas
label = "Malvinas Argentinas",
labelOptions = labelOptions(
noHide = TRUE, # siempre visible
direction = "top",
textOnly = TRUE,
style = list(
"color" = "black",
"font-weight" = "bold",
"font-size" = "14px"
)
)
) %>%
# Opcional: Ajustar la vista inicial
setView(lng = -64, lat = -34, zoom = 4) # Centrar en Argentina
url_bibliotecas <- "https://datos.cultura.gob.ar/dataset/37305de4-3cce-4d4b-9d9a-fec3ca61d09f/resource/01c6c048-dbeb-44e0-8efa-6944f73715d7/download/bibliotecas-populares.csv"
bibliotecas <- read.csv(url_bibliotecas)
# Crear mapa leaflet
leaflet(data = bibliotecas) %>%
addTiles() %>% # Añade un mapa base (OpenStreetMap por defecto)
addCircleMarkers( # Añade marcadores circulares para cada biblioteca
lng = ~longitud, # Mapea longitud a la coordenada x
lat = ~latitud,  # Mapea latitud a la coordenada y
radius = 2, # Tamaño pequeño del círculo
stroke = FALSE, # Sin borde
fillOpacity = 0.8, # Opacidad del relleno
color = "steelblue", # Color de los puntos
popup = ~paste("<b>", nombre, "</b><br>", domicilio, "<br>", localidad, ", ", provincia) # Información al hacer clic
) %>%
# Agrego un marcador fijo en las Malvinas
addLabelOnlyMarkers(
lng = -59.5, lat = -51.7, # Aproximadamente el centro de las islas
label = "Malvinas Argentinas",
labelOptions = labelOptions(
noHide = TRUE, # siempre visible
direction = "top",
textOnly = TRUE,
style = list(
"color" = "black",
"font-weight" = "bold",
"font-size" = "14px"
)
)
) %>%
# Opcional: Ajustar la vista inicial
setView(lng = -64, lat = -34, zoom = 4) # Centrar en Argentina
leaflet(data = bibliotecas) %>%
addTiles() %>% # Añade un mapa base (OpenStreetMap por defecto)
addCircleMarkers( # Añade marcadores circulares para cada biblioteca
lng = ~longitud, # Mapea longitud a la coordenada x
lat = ~latitud,  # Mapea latitud a la coordenada y
radius = 2, # Tamaño pequeño del círculo
stroke = FALSE, # Sin borde
fillOpacity = 0.8, # Opacidad del relleno
color = "steelblue", # Color de los puntos
popup = ~paste("<b>", nombre, "</b><br>", domicilio, "<br>", localidad, ", ", provincia) # Información al hacer clic
)
leaflet(data = bibliotecas) %>%
addTiles() %>% # Añade un mapa base (OpenStreetMap por defecto)
addCircleMarkers( # Añade marcadores circulares para cada biblioteca
lng = ~longitud, # Mapea longitud a la coordenada x
lat = ~latitud,  # Mapea latitud a la coordenada y
radius = 2, # Tamaño pequeño del círculo
stroke = FALSE, # Sin borde
fillOpacity = 0.8, # Opacidad del relleno
color = "steelblue", # Color de los puntos
popup = ~paste("<b>", nombre, "</b><br>", domicilio, "<br>", localidad, ", ", provincia) # Información al hacer clic
) %>%
# Agrego un marcador fijo en las Malvinas
addLabelOnlyMarkers(
lng = -59.5, lat = -51.7, # Aproximadamente el centro de las islas
label = "Malvinas Argentinas",
labelOptions = labelOptions(
noHide = TRUE, # siempre visible
direction = "top",
textOnly = TRUE,
style = list(
"color" = "black",
"font-weight" = "bold",
"font-size" = "14px"
)
)
)
# ---  Cargamos las librerías que vamos a usar ---
library(tidyverse) # que me trae entre ellos ggplot el cual usaremos para mapas estáticos
library(sf) # Para trabajar con datos geoespaciales
library(leaflet) # Para mapas interactivos
# --- Cargamos el GeoJSON de provincias argentinas del IGN ---
# Esta URL puede cambiar, si falla, habrá que buscar una alternativa actualizada.
url_provincias_geojson <- "https://wms.ign.gob.ar/geoserver/ign/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=ign%3Aprovincia&outputFormat=application%2Fjson"
# ---Asignamos el archivo GeoJSON al objeto provincias_sf
provincias_sf <- read_sf(url_provincias_geojson)
url_bibliotecas <- "https://datos.cultura.gob.ar/dataset/37305de4-3cce-4d4b-9d9a-fec3ca61d09f/resource/01c6c048-dbeb-44e0-8efa-6944f73715d7/download/bibliotecas-populares.csv"
bibliotecas <- read.csv(url_bibliotecas)
summary(bibliotecas)
leaflet(data = bibliotecas) %>%
addTiles() %>% # Añade un mapa base (OpenStreetMap por defecto)
addCircleMarkers( # Añade marcadores circulares para cada biblioteca
lng = ~longitud, # Mapea longitud a la coordenada x
lat = ~latitud,  # Mapea latitud a la coordenada y
radius = 2, # Tamaño pequeño del círculo
stroke = FALSE, # Sin borde
fillOpacity = 0.8, # Opacidad del relleno
color = "steelblue", # Color de los puntos
popup = ~paste("<b>", nombre, "</b><br>", domicilio, "<br>", localidad, ", ", provincia) # Información al hacer clic
)
# Crear mapa leaflet
leaflet(data = bibliotecas) %>%
addTiles() %>% # Añade un mapa base (OpenStreetMap por defecto)
addCircleMarkers( # Añade marcadores circulares para cada biblioteca
lng = ~longitud, # Mapea longitud a la coordenada x
lat = ~latitud,  # Mapea latitud a la coordenada y
radius = 2, # Tamaño pequeño del círculo
stroke = FALSE, # Sin borde
fillOpacity = 0.8, # Opacidad del relleno
color = "steelblue", # Color de los puntos
popup = ~paste("<b>", nombre, "</b><br>", domicilio, "<br>", localidad, ", ", provincia) # Información al hacer clic
) %>%
# Agrego un marcador fijo en las Malvinas
addLabelOnlyMarkers(
lng = -59.5, lat = -51.7, # Aproximadamente el centro de las islas
label = "Malvinas Argentinas",
labelOptions = labelOptions(
noHide = TRUE, # siempre visible
direction = "top",
textOnly = TRUE,
style = list(
"color" = "black",
"font-weight" = "bold",
"font-size" = "14px"
)
)
) %>%
# Opcional: Ajustar la vista inicial
setView(lng = -64, lat = -34, zoom = 4) # Centrar en Argentina
leaflet(data = bibliotecas) %>%
addTiles() %>% # Añade un mapa base (OpenStreetMap por defecto)
addCircleMarkers( # Añade marcadores circulares para cada biblioteca
lng = ~longitud, # Mapea longitud a la coordenada x
lat = ~latitud,  # Mapea latitud a la coordenada y
radius = 2, # Tamaño pequeño del círculo
stroke = FALSE, # Sin borde
fillOpacity = 0.8, # Opacidad del relleno
color = "steelblue", # Color de los puntos
popup = ~paste("<b>", nombre, "</b><br>", domicilio, "<br>", localidad, ", ", provincia) # Información al hacer clic
) %>%
# Agrego un marcador fijo en las Malvinas
addLabelOnlyMarkers(
lng = -59.5, lat = -51.7, # Aproximadamente el centro de las islas
label = "Malvinas Argentinas",
labelOptions = labelOptions(
noHide = TRUE, # siempre visible
direction = "top",
textOnly = TRUE,
style = list(
"color" = "black",
"font-weight" = "bold",
"font-size" = "14px"
)
)
) %>%
# Opcional: Ajustar la vista inicial
setView(lng = -64, lat = -34, zoom = 4) # Centrar en Argentina
install.packages("htmltools")
install.packages("leaflet")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
library(tidyverse)
library(htmltools)
library(leaflet)
#| warning: false
#| output-location: slide
#| out.width: "100%"
#| out.height: "500px" # Ajusta la altura del mapa
# Crear mapa leaflet
leaflet(data = bibliotecas) %>%
addTiles() %>% # Añade un mapa base (OpenStreetMap por defecto)
addCircleMarkers( # Añade marcadores circulares para cada biblioteca
lng = ~longitud, # Mapea longitud a la coordenada x
lat = ~latitud,  # Mapea latitud a la coordenada y
radius = 2, # Tamaño pequeño del círculo
stroke = FALSE, # Sin borde
fillOpacity = 0.8, # Opacidad del relleno
color = "steelblue", # Color de los puntos
popup = ~paste("<b>", nombre, "</b><br>", domicilio, "<br>", localidad, ", ", provincia) # Información al hacer clic
) %>%
# Agrego un marcador fijo en las Malvinas
addLabelOnlyMarkers(
lng = -59.5, lat = -51.7, # Aproximadamente el centro de las islas
label = "Malvinas Argentinas",
labelOptions = labelOptions(
noHide = TRUE, # siempre visible
direction = "top",
textOnly = TRUE,
style = list(
"color" = "black",
"font-weight" = "bold",
"font-size" = "14px"
)
)
) %>%
# Opcional: Ajustar la vista inicial
setView(lng = -64, lat = -34, zoom = 4) # Centrar en Argentina
# Crear mapa leaflet
leaflet(data = bibliotecas) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCircleMarkers( # Añade marcadores circulares para cada biblioteca
lng = ~longitud, # Mapea longitud a la coordenada x
lat = ~latitud,  # Mapea latitud a la coordenada y
radius = 2, # Tamaño pequeño del círculo
stroke = FALSE, # Sin borde
fillOpacity = 0.8, # Opacidad del relleno
color = "steelblue", # Color de los puntos
popup = ~paste("<b>", nombre, "</b><br>", domicilio, "<br>", localidad, ", ", provincia) # Información al hacer clic
) %>%
# Opcional: Ajustar la vista inicial
setView(lng = -64, lat = -34, zoom = 4) # Centrar en Argentina
# Crear mapa leaflet
leaflet(data = bibliotecas) %>%
addTiles() %>%
addCircleMarkers( # Añade marcadores circulares para cada biblioteca
lng = ~longitud, # Mapea longitud a la coordenada x
lat = ~latitud,  # Mapea latitud a la coordenada y
radius = 2, # Tamaño pequeño del círculo
stroke = FALSE, # Sin borde
fillOpacity = 0.8, # Opacidad del relleno
color = "steelblue", # Color de los puntos
popup = ~paste("<b>", nombre, "</b><br>", domicilio, "<br>", localidad, ", ", provincia) # Información al hacer clic
) %>%
# Opcional: Ajustar la vista inicial
setView(lng = -64, lat = -34, zoom = 4) # Centrar en Argentina
