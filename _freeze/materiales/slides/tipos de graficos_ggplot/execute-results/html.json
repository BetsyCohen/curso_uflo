{
  "hash": "1cfd7eadeed242f1e2ee442187334d73",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tipos de gr√°ficos y sus usos\"\nsubtitle: \"An√°lisis de Datos 1 - Unidad 4\"\nauthor: \"Betsy Cohen\"\nlogo: \"images/logo-uflo.png\"\nformat:\n  revealjs:\n    width: 1600\n    height: 900\n    theme: slides.scss\n    highlight-style: a11y\n    transition: fade\n    slide-number: true\nexecute:\n  echo: true\ndf-print: kable\n---\n\n\n\n\n# Comunicar con gr√°ficos üìä\n\nEn la clase de hoy, nos adentraremos en el mundo de la visualizaci√≥n de datos con R, una habilidad crucial para explorar patrones, comunicar hallazgos y respaldar nuestros an√°lisis en de datos. Nos enfocaremos en los tipos de gr√°ficos m√°s comunes y en la introducci√≥n al potente paquete `ggplot2`.\n\n# Tipos de Gr√°ficos Comunes y sus Usos üìä\n\nLa elecci√≥n del gr√°fico adecuado es fundamental para transmitir la informaci√≥n de manera efectiva, pero ¬øC√≥mo saber cu√°l necesito? En esta primera secci√≥n repasamos algunos de los tipos de gr√°ficos m√°s utilizados en el an√°lisis de datos.\n\n## Respeten los rangos: Gr√°ficos para variables categ√≥ricas {.smaller}\n\n**Gr√°fico de columnas / barras**\n\nDonde vamos a poder mostrar la distribuci√≥n de una frecuencia para cada categor√≠a. En el gr√°fico de barras las categor√≠as se indican en el eje X mientras que en el de barras se ubican en el eje Y (dejando el el eje X para los valores de la n distribuci√≥n)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nstarwars %>%\n  select(name, gender) %>% \n  group_by(gender) %>%\n  summarise(count = n(), .groups = \"drop\") %>%\n  ggplot(aes(x = gender, y = count)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(\n    title = \"Cantidad de personajes por g√©nero en peliculas de Starwars\",\n    x = \"G√©nero\",\n    y = \"Cantidad de personajes\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n## Apilar y agrupar {.smaller}\n\nUn recurso que tambi√©n podemos usar es mostrar las barras agrupadas o apiladas en funci√≥n de una **segunda variable categ√≥rica** esto tambi√©n nos ayuda a entender la distribuci√≥n como parte de un todo dentro de esa categor√≠a en particular.\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nstarwars %>%\n  select(name, gender, films) %>% \n  unnest(films) %>% \n  group_by(films, gender) %>%\n  summarise(count = n(), .groups = \"drop\") %>%\n  ggplot(aes(x = films, y = count, fill = gender)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(\n    title = \"Personajes de Star Wars por g√©nero\",\n    subtitle = \"Barras agrupadas\",\n    x = \"Pel√≠cula\",\n    y = \"Cantidad de personajes\",\n    fill = \"G√©nero\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggplot2)\n\nstarwars %>%\n  select(name, gender, films) %>% \n  unnest(films) %>% \n  group_by(films, gender) %>%\n  summarise(count = n(), .groups = \"drop\") %>%\n  ggplot(aes(x = films, y = count, fill = gender)) +\n  geom_bar(stat = \"identity\") +  # <- apiladas por default\n  labs(\n    title = \"Personajes de Star Wars por g√©nero\",\n    subtitle = \"Barras apiladas\",\n    x = \"Pel√≠cula\",\n    y = \"Cantidad de personajes\",\n    fill = \"G√©nero\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Algunas alternativas a los gr√°ficos de barra {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nstarwars %>%\n  filter(!is.na(eye_color)) %>%\n  count(eye_color, name = \"cantidad\") %>%\n  ggplot(aes(x = reorder(eye_color, cantidad), y = cantidad)) +\n  geom_segment(aes(xend = eye_color, y = 0, yend = cantidad), color = \"gray\") +\n  geom_point(size = 4, color = \"steelblue\") +\n  coord_flip() +\n  labs(\n    title = \"Personajes en Star Wars por color de sus ojos \",\n    x = \"Color de ojos\",\n    y = \"Cantidad\"\n  ) \n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## ü•ß Graficos de torta y donna {.smaller}\n\nLos gr√°ficos de torta y donna tambi√©n nos permiten ver la distribuci√≥n de una variable categ√≥rica.\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nstarwars %>%\n  filter(!is.na(gender)) %>%\n  count(gender, name = \"cantidad\") %>%\n  ggplot(aes(x = \"\", y = cantidad, fill = gender)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\") +\n  labs(\n    title = \"Personajes de Star Wars por g√©nero\",\n    fill = \"G√©nero\"\n  ) \n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nstarwars %>%\n  filter(!is.na(gender)) %>%\n  count(gender, name = \"cantidad\") %>%\n  ggplot(aes(x = 2, y = cantidad, fill = gender)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  coord_polar(\"y\", start = 0) +\n  xlim(0.5, 2.5) +\n  labs(\n    title = \"Personajes de Star Wars por g√©nero\",\n    fill = \"G√©nero\"\n  ) +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n::: callout-warning\nLos gr√°ficos de torta son muy criticados en la visualizaci√≥n de datos ya que pueden prestar a la confusi√≥n y no podemos tampoco meter m√°s de 5 categor√≠as (sino es ilegible). Usalos con precauci√≥n o, mejor a√∫n, utiliza alternativas como gr√°ficos de barras, diagramas de chupetin, diagramas de √°rbol y otros.\n:::\n\n## üå≥ Parte de un todo: √°rboles y waffles\n\nCuando queremos mostrar una distribuci√≥n de una variable de categ√≥ricas una buena alternativa son los treemaps y los gr√°ficos de waffles\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Preparamos los datos\ngeneros <- starwars %>%\n  filter(!is.na(gender)) %>%\n  count(gender, name = \"cantidad\") %>%\n  arrange(desc(cantidad))\n\n# Gr√°fico waffle\nwaffle::waffle(\n  parts = setNames(generos$cantidad, generos$gender),\n  rows = 10,\n  title = \"Personajes por g√©nero\",\n  colors = RColorBrewer::brewer.pal(n = nrow(generos), name = \"Set2\")\n)+ theme_uflo()\n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nstarwars %>%\n  filter(!is.na(eye_color)) %>%\n  count(eye_color, name = \"cantidad\") %>%\n  ggplot(aes(area = cantidad, fill = eye_color, label = paste(eye_color, cantidad))) +\n  geom_treemap() +\n  geom_treemap_text(colour = \"white\", place = \"centre\", grow = TRUE) +\n  labs(\n    title = \"Personajes por color de ojos \",\n    fill = \"Color de ojos\"\n  ) \n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## ‚è≤Ô∏è Evoluci√≥n en el tiempo {.smaller}\n\nCuando queremos ver la evoluci√≥n de una variable continua en el tiempo, las opciones m√°s habituales son los gr√°ficos de l√≠nea\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlineas <- get_poverty_lines()\n\nlineas %>%\n  select(-ICE) %>%\n  pivot_longer(cols = c(\"CBA\", \"CBT\"), names_to = \"canasta\", values_to = \"valor\") %>%\n  ggplot() +\n  geom_line(aes(x = periodo, y = valor, col = canasta))+\n  labs(\n    title = \"Canastas basica alimentaria y canasta total\",\n    subtitle = \"Encuesta Permanente de Hogares INDEC\",\n    fill = \"Color de ojos\"\n  ) \n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## ‚è≤Ô∏è Evoluci√≥n en el tiempo\n\nUn ejemplo que combina proporci√≥n y evoluci√≥n temporal es el gr√°fico de √°reas:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npop_data <- gapminder::gapminder %>%\n  group_by(year, continent) %>%\n  summarise(total_pop = sum(pop), .groups = \"drop\")\n\nggplot(pop_data, aes(x = year, y = total_pop, fill = continent))+\n  geom_area(alpha = 0.8, color = \"white\")+\n  scale_y_continuous(labels = label_number(scale = 1e-9, suffix = \"B\"))+\n  labs(\n    title = \"Evolucion de la poblacion total por continente\",\n    subtitle = \"Fuente Gapminder\",\n    x = \"A√±o\",\n    y = \"poblaci√≥n (en miles de millones\",\n    fill = \"Continentes\"\n  )\n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## Gr√°ficos de Distribuci√≥n {.smaller}\n\n::: panel-tabset\n### üìä Histogramas\n\nUn histograma se utiliza para mostrar la distribuci√≥n de frecuencia de una variable num√©rica. **Divide los datos en intervalos** (bins) y la altura de cada barra representa la cantidad de observaciones que caen dentro de ese intervalo, permitiendo ver la forma de la distribuci√≥n.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(gapminder::gapminder, aes(x = lifeExp)) +\n  geom_histogram(binwidth = 5, fill = \"steelblue\", color = \"white\") +\n  labs(\n    title = \"Histograma de la esperanza de vida\",\n    x = \"Esperanza de vida\",\n    y = \"Frecuencia\"\n  )\n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n### üí† Gr√°fico de Densidad\n\nEste gr√°fico proporciona una **estimaci√≥n suavizada** de la funci√≥n de densidad de probabilidad de una variable num√©rica. Es √∫til para visualizar la forma general de la distribuci√≥n y compararla entre diferentes grupos.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(gapminder::gapminder, aes(x = lifeExp, fill = continent)) +\n  geom_density(alpha = 0.6) +\n  labs(\n    title = \"Densidad de esperanza de vida por continente\",\n    x = \"Esperanza de vida\",\n    y = \"Densidad\",\n    fill = \"Continente\"\n  )\n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n### üì¶ Boxplot (Diagrama de Caja y Bigotes):\n\nUn boxplot **resume** la distribuci√≥n de una variable num√©rica a trav√©s de sus **cuartiles**, la mediana y posibles valores at√≠picos (outliers). Es especialmente √∫til para comparar la distribuci√≥n de una variable entre diferentes grupos o categor√≠as.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(gapminder::gapminder, aes(x = continent, y = gdpPercap, fill = continent)) +\n  geom_boxplot() +\n  scale_y_log10() +  # Escala logar√≠tmica para ver mejor los valores extremos\n  labs(\n    title = \"Distribuci√≥n del PBI per c√°pita por continente\",\n    x = \"Continente\",\n    y = \"PBI per c√°pita (escala log)\"\n  )\n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n:::\n\n## Gr√°ficos de Correlaci√≥n {.smaller}\n\n::: panel-tabset\n### üéØ Scatter Plot\n\nUn gr√°fico de dispersi√≥n se utiliza para mostrar la relaci√≥n entre dos variables num√©ricas. Cada punto en el gr√°fico representa una observaci√≥n, y la posici√≥n del punto en los ejes horizontal y vertical indica los valores de las dos variables, permitiendo identificar patrones de correlaci√≥n (positiva, negativa o sin correlaci√≥n).\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(gapminder::gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point(alpha = 0.6) +\n  scale_x_log10() +\n  labs(\n    title = \"Relaci√≥n entre PBI per c√°pita y esperanza de vida\",\n    x = \"PBI per c√°pita (log)\",\n    y = \"Esperanza de vida\",\n    color = \"Continente\"\n  )\n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n### üå°Ô∏è Heatmap\n\nUn mapa de calor visualiza la magnitud de una variable como un color en una matriz. Es √∫til para mostrar patrones de correlaci√≥n entre m√∫ltiples variables (donde la intensidad del color representa la fuerza de la correlaci√≥n) o para visualizar datos geogr√°ficos (donde el color representa la magnitud de una variable en diferentes √°reas).\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nselected_countries <- gapminder::gapminder %>%\n  group_by(country) %>%\n  summarise(mean_lifeExp = mean(lifeExp)) %>%\n  top_n(15, mean_lifeExp) %>%\n  pull(country)\n\ngap_heatmap <- gapminder::gapminder %>%\n  filter(country %in% selected_countries)\n\nggplot(gap_heatmap, aes(x = factor(year), y = country, fill = lifeExp)) +\n  geom_tile() +\n  scale_fill_viridis_c() +\n  labs(\n    title = \"Heatmap de esperanza de vida por pa√≠s y a√±o\",\n    x = \"A√±o\",\n    y = \"Pa√≠s\",\n    fill = \"Esperanza de vida\"\n  ) \n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n### ü´ß Gr√°fico de Burbujas\n\nUn gr√°fico de burbujas extiende el gr√°fico de dispersi√≥n al a√±adir una tercera variable que se representa mediante el tama√±o de las burbujas. Esto permite visualizar la relaci√≥n entre tres variables simult√°neamente.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(gapminder::gapminder %>% filter(year == 2007),\n       aes(x = gdpPercap, y = lifeExp, size = pop, color = continent)) +\n  geom_point(alpha = 0.7) +\n  scale_x_log10() +\n  labs(\n    title = \"Relaci√≥n entre PBI, esperanza de vida y poblaci√≥n (2007)\",\n    x = \"PBI per c√°pita (log)\",\n    y = \"Esperanza de vida\",\n    size = \"Poblaci√≥n\",\n    color = \"Continente\"\n  )\n```\n\n::: {.cell-output-display}\n![](tipos-de-graficos_ggplot_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n:::\n\n## Para ir resumiendo\n\nEn esta primera parte, exploramos una variedad de gr√°ficos comunes y sus usos principales en el an√°lisis de datos.\n\n-   los gr√°ficos de **ranking** nos ayudan a comparar **magnitudes entre categor√≠as**\n\n-   los gr√°ficos de \"**parte del todo**\" nos muestran **la composici√≥n de un total**\n\n-   los gr√°ficos de **evoluci√≥n** ilustran tendencias a lo largo del tiempo,\n\n-   los gr√°ficos de distribuci√≥n nos permiten entender la forma en que se **distribuyen** los datos **num√©ricos**\n\n-   y los gr√°ficos de **correlaci√≥n** nos ayudan a identificar **relaciones** entre variables.\n\n## ü§î Preguntas para pensar\n\n-   Si quisieras comparar la cantidad de personas que prefieren diferentes partidos pol√≠ticos en una encuesta, ¬øqu√© tipo de gr√°fico ser√≠a m√°s apropiado?\n\n<!-- -->\n\n-   ¬øQu√© gr√°fico utilizar√≠as para mostrar c√≥mo ha cambiado la tasa de pobreza en un pa√≠s durante los √∫ltimos 20 a√±os?\n\n<!-- -->\n\n-   Imagina que tienes datos sobre el gasto total de un gobierno y quieres mostrar c√≥mo se distribuye ese gasto entre diferentes √°reas como educaci√≥n, salud y defensa. ¬øQu√© tipo de gr√°fico ser√≠a √∫til?\n\n<!-- -->\n\n-   ¬øQu√© tipo de gr√°fico te permitir√≠a identificar si existe una relaci√≥n entre el nivel de ingresos de las personas y su nivel de estudios?\n\n<!-- -->\n\n-   Si tuvieras un texto con las respuestas de una pregunta abierta en una encuesta, ¬øqu√© tipo de visualizaci√≥n te ayudar√≠a a identificar los temas m√°s recurrentes?\n",
    "supporting": [
      "tipos-de-graficos_ggplot_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}