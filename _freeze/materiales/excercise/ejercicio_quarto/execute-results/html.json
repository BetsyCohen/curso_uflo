{
  "hash": "6414685c5f630bd1dfbac05715463e3e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Ejercicio Quarto\"\nformat: html\neditor: visual\n---\n\n\nEl objetivo de este ejercicio es que apliques los conceptos clave de Quarto vistos en clase, transformando y personalizando un informe ya existente.\n\n## üë©‚Äçüç≥Preparaci√≥n del Archivo\n\n-   **Crea un nuevo archivo Quarto (`.qmd`)** en RStudio (File \\> New File \\> Quarto Document\\...).\n\n\n```{=html}\n<!-- -->\n```\n\n-   **Copia el contenido de este archivo**\n\n\n```{=html}\n<!-- -->\n```\n\n-   **Gu√°rdalo** con un nombre f√°cil de recordar, por ejemplo, `ejercicio_quarto.qmd`.\n\n    Este va a ser nuestro punto de partida\n\n## Personalizando tu Informe HTML\n\nVamos a hacer que tu informe HTML tenga una tabla de contenidos y cambie su estilo visual.\n\n1.  **Abr√≠** el archivo que creaste\n2.  **Modific√° el encabezado YAML** (`---` al inicio del archivo) para el formato `html` y agrega las siguientes opciones (¬°ojo con la indentaci√≥n!):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nformat:\n  html:\n    toc: true            # Agreg√° una tabla de contenidos\n    toc-location: left   # Coloc√° la tabla de contenidos a la izquierda\n    number-sections: true # Numer√° autom√°ticamente las secciones\n    theme: cosmo         # Cambi√° el tema visual \n```\n:::\n\n\n::: callout-tip\nFijate cuales son los estilos disponibles en la [documentaci√≥n](https://quarto.org/docs/output-formats/html-themes.html) de Quarto sobre themes\n:::\n\n3.  **Guard√° los cambios** (`Ctrl + S` o `Cmd + S`).\n4.  **Renderiz√° el documento** (haz clic en el bot√≥n \"Render\" en RStudio).\n\n## Convert√≠ tu informe en una presentaci√≥n\n\n1.  **Volve a tu archivo `ejercicio_quarto.qmd`**.\n\n2.  **Modifica el encabezado YAML** nuevamente. Donde dice `format: html:`, **c√°mbialo a `format: revealjs:`**. Elimina o comenta las opciones espec√≠ficas de HTML (`toc`, `toc-location`, `number-sections`, `theme`) y agrega estas opciones para `revealjs`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nformat:\n  revealjs:\n    transition: fade     # Estilo de transici√≥n entre diapositivas\n    slide-number: true   # Muestra el n√∫mero de diapositiva\n    theme: slides.scss   # Usa nuestro tema personalizado para presentaciones\n```\n:::\n\n\n3.  Guard√° y Renderiz√°\n\n## Controlando los Bloques de C√≥digo y el Contenido\n\nAhora vamos a ajustar c√≥mo se muestra el c√≥digo y el gr√°fico, y a a√±adir algo de texto formateado.\n\n1.  **En el bloque de c√≥digo del `summary(gapminder)`:**\n\n    -   Aseg√∫rate de que tenga la opci√≥n `#| echo: false` para que el c√≥digo no se muestre en el output, solo el resumen.\n\n    -   Aseg√∫rate de que tenga `#| warning: false` para evitar mensajes de advertencia.\n\n2.   **En el bloque de c√≥digo del gr√°fico de burbujas (`ggplot`):**\n\n    -   Agrega las opciones `#| fig-width: 10` y `#| fig-height: 7` para controlar el tama√±o del gr√°fico en la salida.\n\n    -   Cambia la opci√≥n `#| echo: true` a `#| echo: false` para que el c√≥digo del gr√°fico no se muestre en tu presentaci√≥n o HTML.\n\n3.   **Agrega una nueva secci√≥n de texto** (puedes usar un encabezado `##`) despu√©s del gr√°fico, con el siguiente contenido:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Comentarios Finales sobre el Gr√°fico\n\nEste gr√°fico es **muy √∫til** para visualizar la relaci√≥n entre el PBI per c√°pita y la esperanza de vida. Adem√°s, nos permite observar la distribuci√≥n de la poblaci√≥n (*que est√° representada por el tama√±o de las burbujas*).\n\nM√°s informaci√≥n en este [enlace de Wikipedia](https://es.wikipedia.org/wiki/Esperanza_de_vida).\n```\n:::\n\n\n1.  **Guarda y Renderiza** en formato HTML o `revealjs` para ver los cambios.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}