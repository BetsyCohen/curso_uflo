---
title: "Entornos, Objetos y Operadores en R"
subtitle: "An√°lisis de Datos 1"
author: "Betsy Cohen"
logo: "images/logo-uflo.png"
date: "27/03/2025"
format:
  revealjs:
    width: 1600
    height: 900
    theme: slides.scss
    highlight-style: a11y
    transition: fade
    slide-number: true
execute:
  echo: true
df-print: kable
---

# Clase 2: Navegando R: Entornos, Objetos y Operadores

Hoy vamos a explorar los **ladrillos fundamentales** con los que construimos an√°lisis de datos en R:

-   **RECAP: Entornos de trabajo:** Vamos a repasar Scripts, Consola, Notebooks.
-   **Objetos:** Vectores y Data Frames.
-   **Operadores:** C√≥mo "darle √≥rdenes" a R.

¬°Comprender estos conceptos es clave para empezar a trabajar con datos en R!

# RECAP!

![](images/meme_previously_on.webp)

# Entornos de Trabajo en R

Cuando trabajamos en R, tenemos diferentes "espacios" o entornos para escribir y ejecutar c√≥digo:

-   **Scripts (.R):** Como vimos la clase pasada son archivos de texto para guardar secuencias de comandos. **Ideal para an√°lisis reproducibles.**
-   **Consola:** Espacio interactivo para ejecutar comandos uno a uno. **Perfecto para probar y explorar.**
-   **Notebooks (.Rmd o .ipynb):** Documentos que combinan c√≥digo, texto y resultados. **Excelente para informes y presentaciones.**

## Scripts: Recetas de An√°lisis Reutilizables üìù {.smaller}

::::: columns
::: {.column width="40%"}
Retomemos este concepto fundamental:

\- Los **scripts de R** son archivos de texto plano con extensi√≥n `.R`.

\- Contienen una serie de comandos de R que se ejecutan en secuencia.

\- Son como "recetas" detalladas para realizar un an√°lisis.

\- **Reutilizables:** Podemos volver a ejecutar el mismo an√°lisis f√°cilmente. -

\- **Editables:** Podemos modificar y mejorar el script.

\- **Documentados:** Podemos agregar comentarios (#) para explicar el c√≥digo. (un mensaje para tu vos del futuro)
:::

::: {.column width="60%"}
![](images/clase_2_parte_2_screenshot_script_comments.png)
:::
:::::

## Consola: Exploraci√≥n Interactiva y Pruebas R√°pidas üßÆ

-   La **consola de R** es un entorno interactivo.
-   Ejecuta comandos l√≠nea por l√≠nea.
-   Muestra los resultados inmediatamente despu√©s de cada comando.
-   **Ideal para:**
    -   **Experimentar:** Probar diferentes comandos y funciones.
    -   **C√°lculos r√°pidos:** Usar R como calculadora.
    -   **Explorar datos:** Ver partes de un objeto, comprobar resultados intermedios.

## Notebooks: Informes Din√°micos y Presentaciones Interactivas üì∞

-   Los **Notebooks** (R Markdown `.Rmd` o Quarto `.ipynb` o `.qmd`) combinan:
    -   **C√≥digo R ejecutable:** Bloques de c√≥digo que se pueden ejecutar dentro del notebook.
    -   **Texto:** Explicaciones, interpretaciones, narrativa del an√°lisis (en Markdown).
    -   **Resultados:** Tablas, gr√°ficos, figuras generadas por el c√≥digo, ¬°integrados en el documento!
-   **Perfectos para:**
    -   **Informes:** Documentar un an√°lisis de forma clara y reproducible.

    -   **Presentaciones:** Mostrar an√°lisis interactivos y din√°micos.

    -   **Aprendizaje:** Experimentar con c√≥digo y ver los resultados en contexto.

## Ayuda en R

En el cuadrante de Output (abajo a la derecha) tenemos varias pesta√±as entre ella una que vamos a usar bastante la pesta√±a **help** Gracias al trabajo de la comunidad vas a notar que en general la documentaci√≥n y ayuda de las funciones siempre te dan una descripci√≥n, detalles y ejemplos de usos.

::::: columns
::: {.column width="50%"}
![](images/clase_2_parte_2_screenshot_help_1){width="60%"}
:::

::: {.column width="50%"}
![](images/clase_2_parte_2_screenshot_help_2){width="60%"}
:::
:::::

# Objetos en R: Los "Ingredientes" de tu An√°lisis

En R, todo lo que creamos y manipulamos son **objetos**. Pens√° en ellos como los "ingredientes" que usas en una receta de cocina:

-   **Vectores:** Listas ordenadas de elementos (n√∫meros, texto, etc.). Como una lista de respuestas a una pregunta de encuesta.
-   **Data Frames:** Tablas de datos, como hojas de c√°lculo. ¬°Donde organizamos nuestros datos sociol√≥gicos!

Hoy nos vamos a centrar en **Vectores** y **Data Frames**, que son los m√°s fundamentales.

## 1. Vectores: Listas de Datos üî¢

Un **vector** es una colecci√≥n **ordenada** de elementos, todos del **mismo tipo**. Imagina una columna en una hoja de c√°lculo.

**Ejemplo:** Las edades de un grupo de personas encuestadas:

`[25, 30, 22, 40, 35]`

## Creando Vectores con `c()`

Usamos la funci√≥n `c()` (de "combine" o "concatenar") para crear vectores:

```{r}
 c(25, 30, 22, 40, 35)
```

## Say my name: ponerle un nombre al vector {.smaller}

Para que podamos guardar y luego "llamar" nuestro vector vamos a necesitar ponerle un nombre. Y para ello en R utilizamos el s√≠mbolo **\<-** o tambi√©n cari√±osamente le decimos **flechita**

De esta manera podemos nombrar nuestro vector edades

```{r}
edades <- c(25, 14, 22, 40, 35)
```

y luego podemos llamarlo

```{r}
edades
```

## Say my name: ponerle un nombre al vector {.smaller}

Y esto es una gran ventaja porque por ej si queremos realizar alguna operaci√≥n como por ejemplo sumarle un a√±o a todas las edades simplemente haremos lo siguiente

```{r}
edades+1
```

Esta caracter√≠stica a en la que la operaci√≥n **se ejecuta sobre cada uno de los elementos** del vector se denomina **element-wise**.

Entonces si realizamos una **operaci√≥n entre dos vectores** se ejecutar√° entre los vectores con misma ubicaci√≥n. Por ejemplo:

```{r}
edades*2
```

```{r}
edades-5
```

## Par√° par√° par√°

![](images/clase_2_parte_2_meme_para_para_para.jpg){fig-align="center"}

**¬øD√≥nde est√°n los vectores que creamos?**

**Probalo** en tu consola y tu IDE de R y despu√©s volv√© a esta presenta

## 

![](images/clase_2_parte_2_a_few_moments_later.jpg){width="100%" height="100%"}

## Pues a nuestro Global Enviroment!

En una "secci√≥n" que llamamos **"Values"**

Ahi tambi√©n podemos ver una informaci√≥n importante sobre nuestro vector

![](images/clase_2_parte_2_screenshot_vector_detail_info.png)

R nos muestra el **nombre** del vector (en este caso `edades`) y el tipo o **clase** que en este caso es `numeric`.

## Tipos de Vectores: No todos los "ingredientes" son iguales

Los vectores en R pueden almacenar diferentes tipos de datos:

::: {incremental}
-   **Num√©ricos (o `double`):** N√∫meros con decimales. Ej: `c(25, 30.5, 22, 40, 35.8)` (edades, ingresos).
-   **Enteros (`integer`):** N√∫meros enteros. Ej: `c(1, 2, 3, 4, 5)` (n√∫mero de hijos).
-   **Caracteres (`character`):** Texto (strings). Ej: `c("Juan", "Maria", "Pedro")` (nombres, respuestas abiertas).
-   **L√≥gicos (`logical`):** Valores `TRUE` o `FALSE`. Ej: `c(TRUE, FALSE, TRUE, TRUE)` (¬øvot√≥ en la √∫ltima elecci√≥n?).
-   **Factores (`factor`):** Variables categ√≥ricas con niveles definidos. Ej: `factor(c("Secundario", "Universitario", "Secundario"))` (nivel educativo).
:::

## Num√©ricos: Cantidades y Medidas üìä

-   Almacenan n√∫meros, con o sin decimales, positivos o negativos.
-   Ideales para representar variables cuantitativas: edad, ingresos, a√±os de educaci√≥n, etc.

Aprovechandon nuestro vector `edades` Podriamos preguntarle a R la edad de nuestro entrevistado m√°s joven. Para eso vamos a usar la funci√≥n `min()`

```{r}
min(edades)
```

::: callout-tip
## ¬°Ahora ustedes!

Cre√° tu vector con ingresos de hogares y realiz√° los siguientes c√°lculos usando estas funciones de R

¬¥min()¬¥ ¬¥mean()¬¥

¬øQu√© represent√° cada una? ¬øQu√© conclusiones sacar√≠as acerca de esta muestra? Podes usar la ventana de **ayuda** integrada dentro de R ubicada en el panel inferior
:::

## Caracteres: Texto y Etiquetas üí¨

Otro tipo de dato que vamos a usar MUCHISIMO son los de tipo texto

-   Almacenan texto, cadenas de caracteres (strings).
-   √ötiles para nombres, categor√≠as nominales, respuestas de encuestas abiertas.

Veamos un ejemplo

```{r}
provincia <- c("CABA", "Buenos Aires","Buenos Aires","Buenos Aires","Mendoza")
provincia
```

::: callout-important
## ¬°OJO!

Los strings no necesariamente tienen que contener letras. Tambi√©n pueden tener n√∫meros almacenados como texto. Por ejemplo:

```{r}
 c("10", "9", "8", "10", "9")
```
:::

## L√≥gicos: Verdadero o Falso ‚úÖ ‚ùå

-   Almacenan valores l√≥gicos: `TRUE` o `FALSE`.
-   Resultado de comparaciones, condiciones.
-   Muy √∫tiles para filtrar datos (los vas a adorar).

Por ejemplo podriamos querer saber si nuestros entrevistados estan en edad de votar

```{r}
mayores_de_16 <- edades > 16
mayores_de_16
```

## Factores: Categor√≠as con Sentido {.smaller}

::::: columns
::: {.column width="50%"}
-   Representan variables categ√≥ricas (nominales u ordinales).
-   Definen **niveles** o categor√≠as posibles.
-   Ayudan a R a entender que una variable es categ√≥rica y no solo texto.
-   Importante para an√°lisis estad√≠sticos y gr√°ficos.

Vayamos con un clasico de la sociolog√≠a

```{r}
niveles_educativos_caracter <- c("Primario","Secundario","Terciario","Universitario")
niveles_educativos_factor <- factor(niveles_educativos_caracter)
niveles_educativos_factor
```
:::

::: {.column width="50%"}
Con la funci√≥n `factor()` nuestro vector deja de ser un simple conjunto de textos sueltos y pasa a ser si quisieramos saber todos los niveles de nuetra variable categ√≥rica podemos usar la funcion `levels()`

```{r}
levels(niveles_educativos_factor)
```
:::
:::::

::: callout-tip
### Characters vs Factores

Si miras el **Global enbviroment** ¬øqu√© diferencias encontras entre los vectores niveles_educativos_caracter y niveles_educativos_factor?
:::

## 2. Data Frames: los vectores se unen porque esa es la ley primera üóÉÔ∏è

Un **data frame** es la estructura de datos **m√°s importante** en R para an√°lisis sociol√≥gico.

-   Similar a una tabla o hoja de c√°lculo en Excel
-   Organiza datos en **filas** (observaciones) y **columnas** (variables).
-   **Cada columna puede ser de un tipo diferente** (num√©rica, caracter, factor, etc.).

## Creando Data Frames {.smaller}

Podemos crear data frames con la funci√≥n `data.frame()` a partir de estos vectores:

Supongamos que tenemos tres vectores chacarcter, otro numerico y otro factorial

```{r}
nombres <- c("Ana", "Pedro", "Maria", "Juan", "Sofia")
edades <- c(25, 30, 22, 40, 35)
nivel_edu <- factor(c("Universitario", "Secundario", "Universitario", "Terciario", "Secundario"))
```

Usando `data.frame()` Nombramos a cada una de las variables indicando el nombre es la columna = nombre_del_vector

```{r}
sociodata <- data.frame(
  nombre = nombres, 
  edad = edades, 
  educacion = nivel_edu)

sociodata
```

## Estructura "Tidy" de Data Frames üßπ

En el "universo tidyverse" (que usaremos mucho), trabajamos con data frames **"tidy"** o "ordenados":

1.  **Cada columna es una variable.** (ej: nombre, edad, educaci√≥n)
2.  **Cada fila es una observaci√≥n.** (ej: cada persona encuestada)
3.  **Cada celda contiene un √∫nico valor.** (ej: la edad de Ana es 25)

¬°Esta estructura facilita mucho el an√°lisis y la manipulaci√≥n de datos!

![](images/clase_2_parte_2_screenshot_tidy_shape.png){fig-align="center"}

## Seleccionando Partes de un Data Frame ‚úÇÔ∏è {.smaller}

Podemos acceder a partes espec√≠ficas de un data frame usando corchetes `[]` o el s√≠mbolo `$` (tambi√©n le decimos "pesitos"):

::: columns
:::{.column width = '50%'} - **Por posici√≥n (√≠ndices num√©ricos):**

```{{r}}
# Traer el caso en la Primera fila, segunda columna:
sociodata[1, 2]
```

```{r}
# Traer toda la primera fila:
sociodata[1, ]
```

```{r}
# Traer toda la segunda columna:
sociodata[, 2]
```
:::

:::{.column width = "50%"} - **Por nombre de columna (`$`):**

```{{r}}
# Columna "educacion" completa:
sociodata$educacion
```

```{r}
# Primer elemento de la columna "nombre":
sociodata$nombre[1]
```

::: :::: \# Operadores en R: Dando √ìrdenes a los Datos ‚öôÔ∏è

Los **operadores** son s√≠mbolos especiales que indican a R qu√© tipo de acci√≥n o c√°lculo debe realizar. Son como los "verbos" en el lenguaje de R.

Tenemos diferentes tipos de operadores:

1.  **Aritm√©ticos:** Para c√°lculos matem√°ticos.
2.  **Relacionales (o de comparaci√≥n):** Para comparar valores (¬ømayor que?, ¬øigual a?).
3.  **De Asignaci√≥n:** Para asignar valores a objetos (¬°ya los usamos con `<-`!).

## 1. Operadores Aritm√©ticos: C√°lculos con Datos ‚ûï ‚ûñ ‚úñÔ∏è ‚ûó {.smaller}

-   `+` Suma
-   `-` Resta
-   `*` Multiplicaci√≥n
-   `/` Divisi√≥n
-   `^` Potencia

**Por ejemplo:**

```{r}
edades <- c(25, 30, 22, 40, 35)

# Sumar 5 a√±os a todas las edades:
edades + 5
```

```{r}
# Calcular el doble de cada edad:
edades * 2
```

## 2. Operadores Relacionales {.smaller}

-   `>` Mayor que
-   `<` Menor que
-   `>=` Mayor o igual que
-   `<=` Menor o igual que
-   `==` Igual a (¬°ojo, **dos iguales**!)
-   `!=` No igual a (distinto de)

**Ejemplos con vectores:**

```{r}
edades <- c(25, 30, 22, 40, 35)

# ¬øQu√© edades son mayores de 30?
edades > 30
```

```{r}
niveles_educativos <- c("Secundario", "Universitario", "Primario", "Universitario", "Terciario")

# ¬øQu√© niveles educativos son "Universitario"?
niveles_educativos == "Universitario"
```

## 3. Operadores de Asignaci√≥n {.smaller}

-   **`<-` (Asignaci√≥n "flechita"):** Asigna el valor de la derecha al objeto de la izquierda. **¬°Es el m√°s com√∫n y recomendado!**

    ```{r}
    mi_variable <- 10
    nombre_data_frame <- sociodata
    ```

-   **`=` (Asignaci√≥n "igual"):** Tambi√©n asigna valores. Funciona similar a `<-`, pero en algunos contextos puede ser menos claro.

    ```{r}
    otra_variable = 20
    ```

-   **`->` (Asignaci√≥n "flecha derecha"):** Asigna el valor de la izquierda al objeto de la derecha. Menos com√∫n, menos legible.

    ```{r}
    "Hola R" -> mensaje
    ```

**En este curso, usaremos principalmente `<-` para asignaciones. ¬°Es una buena pr√°ctica mantener la consistencia!**

# Resumen de la Clase 2: ¬°Pilares de R! {.smaller}

Hoy aprendimos sobre:

-   **Entornos de trabajo:** Scripts, Consola, Notebooks. Elige el adecuado para cada tarea.
-   **Objetos fundamentales:**
    -   **Vectores:** Listas de datos del mismo tipo.
    -   **Data Frames:** Tablas para organizar datos sociol√≥gicos.
-   **Operadores:** Para realizar c√°lculos y comparaciones con nuestros datos.

¬°Con estos conocimientos, ya puedes empezar a crear y manipular datos en R! En la pr√≥xima clase, ¬°vamos a importar datos reales y poner en pr√°ctica todo esto!

# Pr√≥xima Clase: ¬°Importando tus Datos a R! üöÄ

En la pr√≥xima clase, aprenderemos a:

-   **Importar datos desde archivos externos:** CSV, Excel, etc.
-   **Explorar los datos importados:** Ver su estructura, tipos de variables. :::
